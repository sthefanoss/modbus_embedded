

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Mar 20 16:11:25 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184                           
   185                           	psect	idataCOMMON
   186  05B9                     __pidataCOMMON:
   187                           
   188                           ;initializer for _gi_pisca
   189  05B9  3464               	retlw	100
   190                           
   191                           	psect	strings
   192  04C1                     __pstrings:
   193  04C1                     stringtab:
   194  04C1                     __stringtab:
   195                           
   196                           ;	String table - string pointers are 1 byte each
   197  04C1  1BFF               	btfsc	btemp+1,7
   198  04C2  2CCB               	ljmp	stringcode
   199  04C3  1383               	bcf	3,7
   200  04C4  187F               	btfsc	btemp+1,0
   201  04C5  1783               	bsf	3,7
   202  04C6  0800               	movf	0,w
   203  04C7  0A84               	incf	4,f
   204  04C8  1903               	skipnz
   205  04C9  0AFF               	incf	btemp+1,f
   206  04CA  0008               	return
   207  04CB                     stringcode:
   208  04CB                     stringdir:
   209  04CB  3004               	movlw	high stringdir
   210  04CC  008A               	movwf	10
   211  04CD  0804               	movf	4,w
   212  04CE  0A84               	incf	4,f
   213  04CF  0782               	addwf	2,f
   214  04D0                     __stringbase:
   215  04D0  3400               	retlw	0
   216  04D1                     __end_of__stringtab:
   217  04D1                     _hexpowers:
   218  04D1  3401               	retlw	1
   219  04D2  3400               	retlw	0
   220  04D3  3410               	retlw	16
   221  04D4  3400               	retlw	0
   222  04D5  3400               	retlw	0
   223  04D6  3401               	retlw	1
   224  04D7  3400               	retlw	0
   225  04D8  3410               	retlw	16
   226  04D9                     __end_of_hexpowers:
   227  000E                     _TMR1	set	14
   228  001E                     _ADRESH	set	30
   229  0019                     _TXREG	set	25
   230  001F                     _ADCON0bits	set	31
   231  0017                     _CCP1CONbits	set	23
   232  001A                     _RCREG	set	26
   233  0008                     _PORTD	set	8
   234  0038                     _RC0	set	56
   235  003A                     _RC2	set	58
   236  0039                     _RC1	set	57
   237  00F8                     _ADON	set	248
   238  005E                     _PEIE	set	94
   239  00C6                     _RX9	set	198
   240  00C7                     _SPEN	set	199
   241  0080                     _TMR1ON	set	128
   242  005F                     _GIE	set	95
   243  00C4                     _CREN	set	196
   244  00C2                     _FERR	set	194
   245  00C1                     _OERR	set	193
   246  0065                     _RCIF	set	101
   247  0060                     _TMR1IF	set	96
   248  004A                     _RE2	set	74
   249  0049                     _RE1	set	73
   250  009E                     _ADRESL	set	158
   251  0098                     _TXSTAbits	set	152
   252  009F                     _ADCON1	set	159
   253  0085                     _TRISA	set	133
   254  0099                     _SPBRG	set	153
   255  0089                     _TRISE	set	137
   256  0088                     _TRISD	set	136
   257  0086                     _TRISB	set	134
   258  0087                     _TRISC	set	135
   259  04C1                     _TRMT	set	1217
   260  0464                     _TXIE	set	1124
   261  04C5                     _TXEN	set	1221
   262  04C4                     _SYNC	set	1220
   263  04C2                     _BRGH	set	1218
   264  0465                     _RCIE	set	1125
   265  0460                     _TMR1IE	set	1120
   266  04D9                     STR_4:
   267  04D9  3430               	retlw	48	;'0'
   268  04DA  3431               	retlw	49	;'1'
   269  04DB  3432               	retlw	50	;'2'
   270  04DC  3433               	retlw	51	;'3'
   271  04DD  3434               	retlw	52	;'4'
   272  04DE  3435               	retlw	53	;'5'
   273  04DF  3436               	retlw	54	;'6'
   274  04E0  3437               	retlw	55	;'7'
   275  04E1  3438               	retlw	56	;'8'
   276  04E2  3439               	retlw	57	;'9'
   277  04E3  3441               	retlw	65	;'A'
   278  04E4  3442               	retlw	66	;'B'
   279  04E5  3443               	retlw	67	;'C'
   280  04E6  3444               	retlw	68	;'D'
   281  04E7  3445               	retlw	69	;'E'
   282  04E8  3446               	retlw	70	;'F'
   283  04E9  3400               	retlw	0
   284  04EA                     STR_1:
   285  04EA  3420               	retlw	32	;' '
   286  04EB  3474               	retlw	116	;'t'
   287  04EC  3465               	retlw	101	;'e'
   288  04ED  3473               	retlw	115	;'s'
   289  04EE  3474               	retlw	116	;'t'
   290  04EF  3465               	retlw	101	;'e'
   291  04F0  3400               	retlw	0
   292  04F1                     STR_3:
   293  04F1  3425               	retlw	37	;'%'
   294  04F2  3430               	retlw	48	;'0'
   295  04F3  3432               	retlw	50	;'2'
   296  04F4  3458               	retlw	88	;'X'
   297  04F5  3400               	retlw	0
   298  04F6                     STR_2:
   299  04F6  340C               	retlw	12
   300  04F7  3400               	retlw	0
   301                           
   302                           	psect	cinit
   303  0011                     start_initialization:	
   304                           ; #config settings
   305                           
   306  0011                     __initialization:
   307                           
   308                           ; Initialize objects allocated to COMMON
   309  0011  120A  118A  25B9  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   310  0016  00F9               	movwf	__pdataCOMMON& (0+127)
   311                           
   312                           ; Clear objects allocated to BANK0
   313  0017  1383               	bcf	3,7	;select IRP bank0
   314  0018  304F               	movlw	low __pbssBANK0
   315  0019  0084               	movwf	4
   316  001A  3064               	movlw	low (__pbssBANK0+21)
   317  001B  120A  118A  25AB  120A  118A  	fcall	clear_ram0
   318                           
   319                           ; Clear objects allocated to COMMON
   320  0020  01F7               	clrf	__pbssCOMMON& (0+127)
   321  0021  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   322  0022                     end_of_initialization:	
   323                           ;End of C runtime variable initialization code
   324                           
   325  0022                     __end_of__initialization:
   326  0022  0183               	clrf	3
   327  0023  120A  118A  29B5   	ljmp	_main	;jump to C main() function
   328                           
   329                           	psect	bssCOMMON
   330  0077                     __pbssCOMMON:
   331  0077                     _gi_adconv:
   332  0077                     	ds	2
   333                           
   334                           	psect	dataCOMMON
   335  0079                     __pdataCOMMON:
   336  0079                     _gi_pisca:
   337  0079                     	ds	1
   338                           
   339                           	psect	bssBANK0
   340  004F                     __pbssBANK0:
   341  004F                     _gc_c:
   342  004F                     	ds	1
   343  0050                     _gc_rx:
   344  0050                     	ds	20
   345                           
   346                           	psect	clrtext
   347  05AB                     clear_ram0:	
   348                           ;	Called with FSR containing the base address, and
   349                           ;	W with the last address+1
   350                           
   351  05AB  0064               	clrwdt	;clear the watchdog before getting into this loop
   352  05AC                     clrloop0:
   353  05AC  0180               	clrf	0	;clear RAM location pointed to by FSR
   354  05AD  0A84               	incf	4,f	;increment pointer
   355  05AE  0604               	xorwf	4,w	;XOR with final address
   356  05AF  1903               	btfsc	3,2	;have we reached the end yet?
   357  05B0  3400               	retlw	0	;all done for this memory range, return
   358  05B1  0604               	xorwf	4,w	;XOR again to restore value
   359  05B2  2DAC               	goto	clrloop0	;do the next byte
   360                           
   361                           	psect	cstackCOMMON
   362  0070                     __pcstackCOMMON:
   363  0070                     ?_isdigit:
   364  0070                     ?_lcd_wr:	
   365                           ; 1 bit 
   366                           
   367  0070                     ?_lcd_cmd:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_lcd_dat:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_lcd_init:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_isr:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ??_isr:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_main:	
   383                           ; 1 bytes @ 0x0
   384                           
   385                           
   386                           ; 1 bytes @ 0x0
   387  0070                     	ds	4
   388  0074                     ?_sub_tx:
   389  0074                     ??_isdigit:	
   390                           ; 1 bytes @ 0x4
   391                           
   392  0074                     ??_lcd_wr:	
   393                           ; 1 bytes @ 0x4
   394                           
   395  0074                     ??___wmul:	
   396                           ; 1 bytes @ 0x4
   397                           
   398  0074                     ??___lwdiv:	
   399                           ; 1 bytes @ 0x4
   400                           
   401  0074                     ?_f_crc:	
   402                           ; 1 bytes @ 0x4
   403                           
   404  0074                     lcd_wr@val:	
   405                           ; 2 bytes @ 0x4
   406                           
   407  0074                     sub_tx@c_buffer:	
   408                           ; 1 bytes @ 0x4
   409                           
   410  0074                     f_crc@c_buffer:	
   411                           ; 1 bytes @ 0x4
   412                           
   413  0074                     _isdigit$730:	
   414                           ; 1 bytes @ 0x4
   415                           
   416  0074                     ___wmul@product:	
   417                           ; 1 bytes @ 0x4
   418                           
   419                           
   420                           ; 2 bytes @ 0x4
   421  0074                     	ds	1
   422  0075                     ??_sub_tx:
   423  0075                     ??_lcd_cmd:	
   424                           ; 1 bytes @ 0x5
   425                           
   426  0075                     ??_lcd_dat:	
   427                           ; 1 bytes @ 0x5
   428                           
   429  0075                     isdigit@c:	
   430                           ; 1 bytes @ 0x5
   431                           
   432                           
   433                           ; 1 bytes @ 0x5
   434  0075                     	ds	2
   435                           
   436                           	psect	cstackBANK0
   437  0020                     __pcstackBANK0:
   438  0020                     ??_f_crc:
   439  0020                     ?___wmul:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0020                     ?___lwdiv:	
   443                           ; 2 bytes @ 0x0
   444                           
   445  0020                     lcd_cmd@val:	
   446                           ; 2 bytes @ 0x0
   447                           
   448  0020                     lcd_dat@val:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0020                     sub_tx@c_max:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0020                     ___wmul@multiplier:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0020                     ___lwdiv@divisor:	
   458                           ; 2 bytes @ 0x0
   459                           
   460                           
   461                           ; 2 bytes @ 0x0
   462  0020                     	ds	1
   463  0021                     ??_lcd_init:
   464  0021                     ?_lcd_str:	
   465                           ; 1 bytes @ 0x1
   466                           
   467  0021                     sub_tx@c_i:	
   468                           ; 1 bytes @ 0x1
   469                           
   470  0021                     lcd_str@str:	
   471                           ; 1 bytes @ 0x1
   472                           
   473                           
   474                           ; 2 bytes @ 0x1
   475  0021                     	ds	1
   476  0022                     f_crc@c_max:
   477  0022                     ___wmul@multiplicand:	
   478                           ; 1 bytes @ 0x2
   479                           
   480  0022                     ___lwdiv@dividend:	
   481                           ; 2 bytes @ 0x2
   482                           
   483                           
   484                           ; 2 bytes @ 0x2
   485  0022                     	ds	1
   486  0023                     ??_lcd_str:
   487  0023                     f_crc@c_i:	
   488                           ; 1 bytes @ 0x3
   489                           
   490                           
   491                           ; 1 bytes @ 0x3
   492  0023                     	ds	1
   493  0024                     lcd_str@i:
   494  0024                     f_crc@c_j:	
   495                           ; 1 bytes @ 0x4
   496                           
   497  0024                     ___lwdiv@counter:	
   498                           ; 1 bytes @ 0x4
   499                           
   500                           
   501                           ; 1 bytes @ 0x4
   502  0024                     	ds	1
   503  0025                     f_crc@i_CRC:
   504  0025                     ___lwdiv@quotient:	
   505                           ; 2 bytes @ 0x5
   506                           
   507                           
   508                           ; 2 bytes @ 0x5
   509  0025                     	ds	2
   510  0027                     ?_sprintf:
   511  0027                     sprintf@f:	
   512                           ; 2 bytes @ 0x7
   513                           
   514                           
   515                           ; 1 bytes @ 0x7
   516  0027                     	ds	3
   517  002A                     ??_sprintf:
   518                           
   519                           ; 1 bytes @ 0xA
   520  002A                     	ds	3
   521  002D                     sprintf@idx:
   522                           
   523                           ; 1 bytes @ 0xD
   524  002D                     	ds	1
   525  002E                     sprintf@ap:
   526                           
   527                           ; 1 bytes @ 0xE
   528  002E                     	ds	1
   529  002F                     sprintf@flag:
   530                           
   531                           ; 1 bytes @ 0xF
   532  002F                     	ds	1
   533  0030                     sprintf@val:
   534                           
   535                           ; 2 bytes @ 0x10
   536  0030                     	ds	2
   537  0032                     sprintf@prec:
   538                           
   539                           ; 1 bytes @ 0x12
   540  0032                     	ds	1
   541  0033                     sprintf@sp:
   542                           
   543                           ; 1 bytes @ 0x13
   544  0033                     	ds	1
   545  0034                     sprintf@width:
   546                           
   547                           ; 2 bytes @ 0x14
   548  0034                     	ds	2
   549  0036                     sprintf@c:
   550                           
   551                           ; 1 bytes @ 0x16
   552  0036                     	ds	1
   553  0037                     ??_main:
   554                           
   555                           ; 1 bytes @ 0x17
   556  0037                     	ds	3
   557  003A                     main@c_texto:
   558                           
   559                           ; 16 bytes @ 0x1A
   560  003A                     	ds	16
   561  004A                     main@i_crc:
   562                           
   563                           ; 2 bytes @ 0x2A
   564  004A                     	ds	2
   565  004C                     main@i_crc2:
   566                           
   567                           ; 2 bytes @ 0x2C
   568  004C                     	ds	2
   569  004E                     main@c_i:
   570                           
   571                           ; 1 bytes @ 0x2E
   572  004E                     	ds	1
   573                           
   574                           	psect	maintext
   575  01B5                     __pmaintext:	
   576 ;;
   577 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   578 ;;
   579 ;; *************** function _main *****************
   580 ;; Defined at:
   581 ;;		line 55 in file "automacao_2_2023_1_picgenios.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  c_texto        16   26[BANK0 ] unsigned char [16]
   586 ;;  i_crc2          2   44[BANK0 ] unsigned int 
   587 ;;  i_crc           2   42[BANK0 ] unsigned int 
   588 ;;  c_i             1   46[BANK0 ] unsigned char 
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : B00/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   598 ;;      Params:         0       0       0       0       0
   599 ;;      Locals:         0      21       0       0       0
   600 ;;      Temps:          0       3       0       0       0
   601 ;;      Totals:         0      24       0       0       0
   602 ;;Total ram usage:       24 bytes
   603 ;; Hardware stack levels required when called: 4
   604 ;; This function calls:
   605 ;;		_f_crc
   606 ;;		_lcd_init
   607 ;;		_lcd_str
   608 ;;		_sprintf
   609 ;;		_sub_tx
   610 ;; This function is called by:
   611 ;;		Startup code after reset
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           
   616                           ;psect for function _main
   617  01B5                     _main:
   618  01B5                     l2070:	
   619                           ;incstack = 0
   620                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   621                           
   622                           
   623                           ;automacao_2_2023_1_picgenios.c: 56:     unsigned char c_texto[16], c_i;;automacao_2_202
      +                          3_1_picgenios.c: 57:     unsigned int i_crc, i_crc2;;automacao_2_2023_1_picgenios.c: 59:
      +                               GIE = 0;
   624  01B5  138B               	bcf	11,7	;volatile
   625  01B6                     l2072:
   626                           
   627                           ;automacao_2_2023_1_picgenios.c: 60:     TRISC = 0;
   628  01B6  1683               	bsf	3,5	;RP0=1, select bank1
   629  01B7  1303               	bcf	3,6	;RP1=0, select bank1
   630  01B8  0187               	clrf	7	;volatile
   631                           
   632                           ;automacao_2_2023_1_picgenios.c: 61:     TRISB = 0;
   633  01B9  0186               	clrf	6	;volatile
   634                           
   635                           ;automacao_2_2023_1_picgenios.c: 62:     TRISD = 0;
   636  01BA  0188               	clrf	8	;volatile
   637                           
   638                           ;automacao_2_2023_1_picgenios.c: 63:     TRISE = 0;
   639  01BB  0189               	clrf	9	;volatile
   640  01BC                     l2074:
   641                           
   642                           ;automacao_2_2023_1_picgenios.c: 67:     TMR1 = 55536;
   643  01BC  30D8               	movlw	216
   644  01BD  1283               	bcf	3,5	;RP0=0, select bank0
   645  01BE  1303               	bcf	3,6	;RP1=0, select bank0
   646  01BF  008F               	movwf	15	;volatile
   647  01C0  30F0               	movlw	240
   648  01C1  008E               	movwf	14	;volatile
   649  01C2                     l2076:
   650                           
   651                           ;automacao_2_2023_1_picgenios.c: 68:     TMR1IE = 1;
   652  01C2  1683               	bsf	3,5	;RP0=1, select bank1
   653  01C3  1303               	bcf	3,6	;RP1=0, select bank1
   654  01C4  140C               	bsf	12,0	;volatile
   655  01C5                     l2078:
   656                           
   657                           ;automacao_2_2023_1_picgenios.c: 69:     TMR1ON = 1;
   658  01C5  1283               	bcf	3,5	;RP0=0, select bank0
   659  01C6  1303               	bcf	3,6	;RP1=0, select bank0
   660  01C7  1410               	bsf	16,0	;volatile
   661  01C8                     l2080:
   662                           
   663                           ;automacao_2_2023_1_picgenios.c: 71:     BRGH = 1;
   664  01C8  1683               	bsf	3,5	;RP0=1, select bank1
   665  01C9  1303               	bcf	3,6	;RP1=0, select bank1
   666  01CA  1518               	bsf	24,2	;volatile
   667  01CB                     l2082:
   668                           
   669                           ;automacao_2_2023_1_picgenios.c: 72:     SPBRG = (8000000L/(16UL*9600L) - 1);
   670  01CB  3033               	movlw	51
   671  01CC  0099               	movwf	25	;volatile
   672  01CD                     l2084:
   673                           
   674                           ;automacao_2_2023_1_picgenios.c: 73:     SYNC = 0;
   675  01CD  1218               	bcf	24,4	;volatile
   676  01CE                     l2086:
   677                           
   678                           ;automacao_2_2023_1_picgenios.c: 74:     SPEN = 1;
   679  01CE  1283               	bcf	3,5	;RP0=0, select bank0
   680  01CF  1303               	bcf	3,6	;RP1=0, select bank0
   681  01D0  1798               	bsf	24,7	;volatile
   682  01D1                     l2088:
   683                           
   684                           ;automacao_2_2023_1_picgenios.c: 75:     RX9 = 0;
   685  01D1  1318               	bcf	24,6	;volatile
   686  01D2                     l2090:
   687                           
   688                           ;automacao_2_2023_1_picgenios.c: 76:     CREN = 1;
   689  01D2  1618               	bsf	24,4	;volatile
   690  01D3                     l2092:
   691                           
   692                           ;automacao_2_2023_1_picgenios.c: 77:     TXEN = 1;
   693  01D3  1683               	bsf	3,5	;RP0=1, select bank1
   694  01D4  1303               	bcf	3,6	;RP1=0, select bank1
   695  01D5  1698               	bsf	24,5	;volatile
   696  01D6                     l2094:
   697                           
   698                           ;automacao_2_2023_1_picgenios.c: 78:     PEIE = 1;
   699  01D6  170B               	bsf	11,6	;volatile
   700  01D7                     l2096:
   701                           
   702                           ;automacao_2_2023_1_picgenios.c: 79:     RCIE = 1;
   703  01D7  168C               	bsf	12,5	;volatile
   704  01D8                     l2098:
   705                           
   706                           ;automacao_2_2023_1_picgenios.c: 80:     TXIE = 0;
   707  01D8  120C               	bcf	12,4	;volatile
   708  01D9                     l2100:
   709                           
   710                           ;automacao_2_2023_1_picgenios.c: 82:     CCP1CONbits.CCP1M = 0;
   711  01D9  30F0               	movlw	-16
   712  01DA  1283               	bcf	3,5	;RP0=0, select bank0
   713  01DB  1303               	bcf	3,6	;RP1=0, select bank0
   714  01DC  0597               	andwf	23,f	;volatile
   715  01DD                     l2102:
   716                           
   717                           ;automacao_2_2023_1_picgenios.c: 83:     GIE = 1;
   718  01DD  178B               	bsf	11,7	;volatile
   719  01DE                     l2104:
   720                           
   721                           ;automacao_2_2023_1_picgenios.c: 86:     TRISA = 3;
   722  01DE  3003               	movlw	3
   723  01DF  1683               	bsf	3,5	;RP0=1, select bank1
   724  01E0  1303               	bcf	3,6	;RP1=0, select bank1
   725  01E1  0085               	movwf	5	;volatile
   726  01E2                     l2106:
   727                           
   728                           ;automacao_2_2023_1_picgenios.c: 87:     ADCON1 = 0X84;
   729  01E2  3084               	movlw	132
   730  01E3  009F               	movwf	31	;volatile
   731  01E4                     l2108:
   732                           
   733                           ;automacao_2_2023_1_picgenios.c: 89:     ADCON0bits.CHS = 1;
   734  01E4  1283               	bcf	3,5	;RP0=0, select bank0
   735  01E5  1303               	bcf	3,6	;RP1=0, select bank0
   736  01E6  081F               	movf	31,w	;volatile
   737  01E7  39C7               	andlw	-57
   738  01E8  3808               	iorlw	8
   739  01E9  009F               	movwf	31	;volatile
   740  01EA                     l2110:
   741                           
   742                           ;automacao_2_2023_1_picgenios.c: 90:     ADCON0bits.ADCS = 5;
   743  01EA  081F               	movf	31,w	;volatile
   744  01EB  393F               	andlw	-193
   745  01EC  3840               	iorlw	64
   746  01ED  009F               	movwf	31	;volatile
   747  01EE                     l2112:
   748                           
   749                           ;automacao_2_2023_1_picgenios.c: 92:     ADON = 1;
   750  01EE  141F               	bsf	31,0	;volatile
   751  01EF                     l2114:
   752                           
   753                           ;automacao_2_2023_1_picgenios.c: 94:     RC1 = 0;
   754  01EF  1087               	bcf	7,1	;volatile
   755  01F0                     l2116:
   756                           
   757                           ;automacao_2_2023_1_picgenios.c: 95:     RC2 = 0;
   758  01F0  1107               	bcf	7,2	;volatile
   759  01F1                     l2118:
   760                           
   761                           ;automacao_2_2023_1_picgenios.c: 96:     lcd_init();
   762  01F1  120A  118A  233B  120A  118A  	fcall	_lcd_init
   763  01F6                     l2120:
   764                           
   765                           ;automacao_2_2023_1_picgenios.c: 97:     _delay((unsigned long)((500)*(8000000L/4000.0))
      +                          );
   766  01F6  3006               	movlw	6
   767  01F7  1283               	bcf	3,5	;RP0=0, select bank0
   768  01F8  1303               	bcf	3,6	;RP1=0, select bank0
   769  01F9  00B9               	movwf	??_main+2
   770  01FA  3013               	movlw	19
   771  01FB  00B8               	movwf	??_main+1
   772  01FC  30AD               	movlw	173
   773  01FD  00B7               	movwf	??_main
   774  01FE                     u1727:
   775  01FE  0BB7               	decfsz	??_main,f
   776  01FF  29FE               	goto	u1727
   777  0200  0BB8               	decfsz	??_main+1,f
   778  0201  29FE               	goto	u1727
   779  0202  0BB9               	decfsz	??_main+2,f
   780  0203  29FE               	goto	u1727
   781  0204                     l2122:
   782                           
   783                           ;automacao_2_2023_1_picgenios.c: 98:     lcd_str(" teste");
   784  0204  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   785  0205  1283               	bcf	3,5	;RP0=0, select bank0
   786  0206  1303               	bcf	3,6	;RP1=0, select bank0
   787  0207  00A1               	movwf	lcd_str@str
   788  0208  3080               	movlw	128
   789  0209  00A2               	movwf	lcd_str@str+1
   790  020A  120A  118A  247C  120A  118A  	fcall	_lcd_str
   791  020F                     l2124:
   792                           
   793                           ;automacao_2_2023_1_picgenios.c: 106:         if (gc_c >= 8) {
   794  020F  3008               	movlw	8
   795  0210  1283               	bcf	3,5	;RP0=0, select bank0
   796  0211  1303               	bcf	3,6	;RP1=0, select bank0
   797  0212  024F               	subwf	_gc_c,w
   798  0213  1C03               	skipc
   799  0214  2A16               	goto	u1551
   800  0215  2A17               	goto	u1550
   801  0216                     u1551:
   802  0216  2A0F               	goto	l2124
   803  0217                     u1550:
   804  0217                     l2126:
   805                           
   806                           ;automacao_2_2023_1_picgenios.c: 109:             lcd_str("\f");
   807  0217  3026               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   808  0218  00A1               	movwf	lcd_str@str
   809  0219  3080               	movlw	128
   810  021A  00A2               	movwf	lcd_str@str+1
   811  021B  120A  118A  247C  120A  118A  	fcall	_lcd_str
   812  0220                     l2128:
   813                           
   814                           ;automacao_2_2023_1_picgenios.c: 110:             for (c_i = 0; c_i < 8; c_i++) {
   815  0220  1283               	bcf	3,5	;RP0=0, select bank0
   816  0221  1303               	bcf	3,6	;RP1=0, select bank0
   817  0222  01CE               	clrf	main@c_i
   818  0223                     l2134:
   819                           
   820                           ;automacao_2_2023_1_picgenios.c: 111:                 sprintf(c_texto, "%02X", gc_rx[c_i
      +                          ]);
   821  0223  3021               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   822  0224  00B7               	movwf	??_main
   823  0225  0837               	movf	??_main,w
   824  0226  00A7               	movwf	sprintf@f
   825  0227  084E               	movf	main@c_i,w
   826  0228  3E50               	addlw	(low (_gc_rx| 0))& (0+255)
   827  0229  0084               	movwf	4
   828  022A  1383               	bcf	3,7	;select IRP bank0
   829  022B  0800               	movf	0,w
   830  022C  00B8               	movwf	??_main+1
   831  022D  01B9               	clrf	??_main+2
   832  022E  0838               	movf	??_main+1,w
   833  022F  00A8               	movwf	?_sprintf+1
   834  0230  0839               	movf	??_main+2,w
   835  0231  00A9               	movwf	?_sprintf+2
   836  0232  303A               	movlw	(low (main@c_texto| 0))& (0+255)
   837  0233  120A  118A  2026  120A  118A  	fcall	_sprintf
   838                           
   839                           ;automacao_2_2023_1_picgenios.c: 112:                 lcd_str(c_texto);
   840  0238  303A               	movlw	(low (main@c_texto| 0))& (0+255)
   841  0239  1283               	bcf	3,5	;RP0=0, select bank0
   842  023A  1303               	bcf	3,6	;RP1=0, select bank0
   843  023B  00A1               	movwf	lcd_str@str
   844  023C  3000               	movlw	0
   845  023D  00A2               	movwf	lcd_str@str+1
   846  023E  120A  118A  247C  120A  118A  	fcall	_lcd_str
   847  0243                     l2136:
   848                           
   849                           ;automacao_2_2023_1_picgenios.c: 113:             }
   850  0243  3001               	movlw	1
   851  0244  1283               	bcf	3,5	;RP0=0, select bank0
   852  0245  1303               	bcf	3,6	;RP1=0, select bank0
   853  0246  00B7               	movwf	??_main
   854  0247  0837               	movf	??_main,w
   855  0248  07CE               	addwf	main@c_i,f
   856  0249                     l2138:
   857  0249  3008               	movlw	8
   858  024A  024E               	subwf	main@c_i,w
   859  024B  1C03               	skipc
   860  024C  2A4E               	goto	u1561
   861  024D  2A4F               	goto	u1560
   862  024E                     u1561:
   863  024E  2A23               	goto	l2134
   864  024F                     u1560:
   865  024F                     l2140:
   866                           
   867                           ;automacao_2_2023_1_picgenios.c: 114:             gc_c = 0;
   868  024F  01CF               	clrf	_gc_c
   869  0250                     l2142:
   870                           
   871                           ;automacao_2_2023_1_picgenios.c: 115:             if (gc_rx[0] == 1) {
   872  0250  0350               	decf	_gc_rx,w
   873  0251  1D03               	btfss	3,2
   874  0252  2A54               	goto	u1571
   875  0253  2A55               	goto	u1570
   876  0254                     u1571:
   877  0254  2A0F               	goto	l2124
   878  0255                     u1570:
   879  0255  2B2B               	goto	l2206
   880  0256                     l2146:
   881                           
   882                           ;automacao_2_2023_1_picgenios.c: 118:                         i_crc = gc_rx[7];
   883  0256  0857               	movf	_gc_rx+7,w
   884  0257  00B7               	movwf	??_main
   885  0258  01B8               	clrf	??_main+1
   886  0259  0837               	movf	??_main,w
   887  025A  00CA               	movwf	main@i_crc
   888  025B  0838               	movf	??_main+1,w
   889  025C  00CB               	movwf	main@i_crc+1
   890                           
   891                           ;automacao_2_2023_1_picgenios.c: 119:                         i_crc <<= 8;
   892  025D  3008               	movlw	8
   893  025E                     u1585:
   894  025E  1003               	clrc
   895  025F  0DCA               	rlf	main@i_crc,f
   896  0260  0DCB               	rlf	main@i_crc+1,f
   897  0261  3EFF               	addlw	-1
   898  0262  1D03               	skipz
   899  0263  2A5E               	goto	u1585
   900                           
   901                           ;automacao_2_2023_1_picgenios.c: 120:                         i_crc += gc_rx[6];
   902  0264  0856               	movf	_gc_rx+6,w
   903  0265  00B7               	movwf	??_main
   904  0266  01B8               	clrf	??_main+1
   905  0267  0837               	movf	??_main,w
   906  0268  07CA               	addwf	main@i_crc,f
   907  0269  1803               	skipnc
   908  026A  0ACB               	incf	main@i_crc+1,f
   909  026B  0838               	movf	??_main+1,w
   910  026C  07CB               	addwf	main@i_crc+1,f
   911  026D                     l2148:
   912                           
   913                           ;automacao_2_2023_1_picgenios.c: 121:                         i_crc2 = f_crc(6, gc_rx);
   914  026D  3050               	movlw	(low (_gc_rx| 0))& (0+255)
   915  026E  00B7               	movwf	??_main
   916  026F  0837               	movf	??_main,w
   917  0270  00F4               	movwf	f_crc@c_buffer
   918  0271  3006               	movlw	6
   919  0272  120A  118A  23E7  120A  118A  	fcall	_f_crc
   920  0277  0875               	movf	?_f_crc+1,w
   921  0278  1283               	bcf	3,5	;RP0=0, select bank0
   922  0279  1303               	bcf	3,6	;RP1=0, select bank0
   923  027A  00CD               	movwf	main@i_crc2+1
   924  027B  0874               	movf	?_f_crc,w
   925  027C  00CC               	movwf	main@i_crc2
   926  027D                     l2150:
   927                           
   928                           ;automacao_2_2023_1_picgenios.c: 124:                         if (i_crc == i_crc2) {
   929  027D  084D               	movf	main@i_crc2+1,w
   930  027E  064B               	xorwf	main@i_crc+1,w
   931  027F  1D03               	skipz
   932  0280  2A83               	goto	u1595
   933  0281  084C               	movf	main@i_crc2,w
   934  0282  064A               	xorwf	main@i_crc,w
   935  0283                     u1595:
   936  0283  1D03               	skipz
   937  0284  2A86               	goto	u1591
   938  0285  2A87               	goto	u1590
   939  0286                     u1591:
   940  0286  2A0F               	goto	l2124
   941  0287                     u1590:
   942  0287                     l2152:
   943                           
   944                           ;automacao_2_2023_1_picgenios.c: 126:                             if (gc_rx[2] == 0 && g
      +                          c_rx[3] == 9) {
   945  0287  0852               	movf	_gc_rx+2,w
   946  0288  1D03               	btfss	3,2
   947  0289  2A8B               	goto	u1601
   948  028A  2A8C               	goto	u1600
   949  028B                     u1601:
   950  028B  2ABF               	goto	l2172
   951  028C                     u1600:
   952  028C                     l2154:
   953  028C  3009               	movlw	9
   954  028D  0653               	xorwf	_gc_rx+3,w
   955  028E  1D03               	btfss	3,2
   956  028F  2A91               	goto	u1611
   957  0290  2A92               	goto	u1610
   958  0291                     u1611:
   959  0291  2ABF               	goto	l2172
   960  0292                     u1610:
   961  0292                     l2156:
   962                           
   963                           ;automacao_2_2023_1_picgenios.c: 128:                                 if (gc_rx[4] == 0x
      +                          ff && gc_rx[5] == 0) {
   964  0292  0A54               	incf	_gc_rx+4,w
   965  0293  1D03               	btfss	3,2
   966  0294  2A96               	goto	u1621
   967  0295  2A97               	goto	u1620
   968  0296                     u1621:
   969  0296  2A9D               	goto	l2162
   970  0297                     u1620:
   971  0297                     l2158:
   972  0297  0855               	movf	_gc_rx+5,w
   973  0298  1D03               	btfss	3,2
   974  0299  2A9B               	goto	u1631
   975  029A  2A9C               	goto	u1630
   976  029B                     u1631:
   977  029B  2A9D               	goto	l2162
   978  029C                     u1630:
   979  029C                     l2160:
   980                           
   981                           ;automacao_2_2023_1_picgenios.c: 129:                                     RC2 = 1;
   982  029C  1507               	bsf	7,2	;volatile
   983  029D                     l2162:
   984                           
   985                           ;automacao_2_2023_1_picgenios.c: 132:                                 if (gc_rx[4] == 0 
      +                          && gc_rx[5] == 0) {
   986  029D  0854               	movf	_gc_rx+4,w
   987  029E  1D03               	btfss	3,2
   988  029F  2AA1               	goto	u1641
   989  02A0  2AA2               	goto	u1640
   990  02A1                     u1641:
   991  02A1  2AA8               	goto	l2168
   992  02A2                     u1640:
   993  02A2                     l2164:
   994  02A2  0855               	movf	_gc_rx+5,w
   995  02A3  1D03               	btfss	3,2
   996  02A4  2AA6               	goto	u1651
   997  02A5  2AA7               	goto	u1650
   998  02A6                     u1651:
   999  02A6  2AA8               	goto	l2168
  1000  02A7                     u1650:
  1001  02A7                     l2166:
  1002                           
  1003                           ;automacao_2_2023_1_picgenios.c: 133:                                     RC2 = 0;
  1004  02A7  1107               	bcf	7,2	;volatile
  1005  02A8                     l2168:
  1006                           
  1007                           ;automacao_2_2023_1_picgenios.c: 135:                                 _delay((unsigned l
      +                          ong)((50)*(8000000L/4000.0)));
  1008  02A8  3082               	movlw	130
  1009  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1010  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1011  02AB  00B8               	movwf	??_main+1
  1012  02AC  30DD               	movlw	221
  1013  02AD  00B7               	movwf	??_main
  1014  02AE                     u1737:
  1015  02AE  0BB7               	decfsz	??_main,f
  1016  02AF  2AAE               	goto	u1737
  1017  02B0  0BB8               	decfsz	??_main+1,f
  1018  02B1  2AAE               	goto	u1737
  1019  02B2                     l2170:
  1020                           
  1021                           ;automacao_2_2023_1_picgenios.c: 136:                                 sub_tx( 8,gc_rx);
  1022  02B2  3050               	movlw	(low (_gc_rx| 0))& (0+255)
  1023  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1024  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1025  02B5  00B7               	movwf	??_main
  1026  02B6  0837               	movf	??_main,w
  1027  02B7  00F4               	movwf	sub_tx@c_buffer
  1028  02B8  3008               	movlw	8
  1029  02B9  120A  118A  24F8  120A  118A  	fcall	_sub_tx
  1030                           
  1031                           ;automacao_2_2023_1_picgenios.c: 137:                             } else if (gc_rx[2] ==
      +                           0 && gc_rx[3] == 10) {
  1032  02BE  2A0F               	goto	l2124
  1033  02BF                     l2172:
  1034  02BF  0852               	movf	_gc_rx+2,w
  1035  02C0  1D03               	btfss	3,2
  1036  02C1  2AC3               	goto	u1661
  1037  02C2  2AC4               	goto	u1660
  1038  02C3                     u1661:
  1039  02C3  2AF7               	goto	l144
  1040  02C4                     u1660:
  1041  02C4                     l2174:
  1042  02C4  300A               	movlw	10
  1043  02C5  0653               	xorwf	_gc_rx+3,w
  1044  02C6  1D03               	btfss	3,2
  1045  02C7  2AC9               	goto	u1671
  1046  02C8  2ACA               	goto	u1670
  1047  02C9                     u1671:
  1048  02C9  2AF7               	goto	l144
  1049  02CA                     u1670:
  1050  02CA                     l2176:
  1051                           
  1052                           ;automacao_2_2023_1_picgenios.c: 139:                                 if (gc_rx[4] == 0x
      +                          ff && gc_rx[5] == 0) {
  1053  02CA  0A54               	incf	_gc_rx+4,w
  1054  02CB  1D03               	btfss	3,2
  1055  02CC  2ACE               	goto	u1681
  1056  02CD  2ACF               	goto	u1680
  1057  02CE                     u1681:
  1058  02CE  2AD5               	goto	l2182
  1059  02CF                     u1680:
  1060  02CF                     l2178:
  1061  02CF  0855               	movf	_gc_rx+5,w
  1062  02D0  1D03               	btfss	3,2
  1063  02D1  2AD3               	goto	u1691
  1064  02D2  2AD4               	goto	u1690
  1065  02D3                     u1691:
  1066  02D3  2AD5               	goto	l2182
  1067  02D4                     u1690:
  1068  02D4                     l2180:
  1069                           
  1070                           ;automacao_2_2023_1_picgenios.c: 140:                                     RC0 = 1;
  1071  02D4  1407               	bsf	7,0	;volatile
  1072  02D5                     l2182:
  1073                           
  1074                           ;automacao_2_2023_1_picgenios.c: 143:                                 if (gc_rx[4] == 0 
      +                          && gc_rx[5] == 0) {
  1075  02D5  0854               	movf	_gc_rx+4,w
  1076  02D6  1D03               	btfss	3,2
  1077  02D7  2AD9               	goto	u1701
  1078  02D8  2ADA               	goto	u1700
  1079  02D9                     u1701:
  1080  02D9  2AE0               	goto	l2188
  1081  02DA                     u1700:
  1082  02DA                     l2184:
  1083  02DA  0855               	movf	_gc_rx+5,w
  1084  02DB  1D03               	btfss	3,2
  1085  02DC  2ADE               	goto	u1711
  1086  02DD  2ADF               	goto	u1710
  1087  02DE                     u1711:
  1088  02DE  2AE0               	goto	l2188
  1089  02DF                     u1710:
  1090  02DF                     l2186:
  1091                           
  1092                           ;automacao_2_2023_1_picgenios.c: 144:                                     RC0 = 0;
  1093  02DF  1007               	bcf	7,0	;volatile
  1094  02E0                     l2188:
  1095                           
  1096                           ;automacao_2_2023_1_picgenios.c: 146:                                 _delay((unsigned l
      +                          ong)((50)*(8000000L/4000.0)));
  1097  02E0  3082               	movlw	130
  1098  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1099  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1100  02E3  00B8               	movwf	??_main+1
  1101  02E4  30DD               	movlw	221
  1102  02E5  00B7               	movwf	??_main
  1103  02E6                     u1747:
  1104  02E6  0BB7               	decfsz	??_main,f
  1105  02E7  2AE6               	goto	u1747
  1106  02E8  0BB8               	decfsz	??_main+1,f
  1107  02E9  2AE6               	goto	u1747
  1108  02EA                     l2190:
  1109                           
  1110                           ;automacao_2_2023_1_picgenios.c: 147:                                 sub_tx( 8,gc_rx);
  1111  02EA  3050               	movlw	(low (_gc_rx| 0))& (0+255)
  1112  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1113  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1114  02ED  00B7               	movwf	??_main
  1115  02EE  0837               	movf	??_main,w
  1116  02EF  00F4               	movwf	sub_tx@c_buffer
  1117  02F0  3008               	movlw	8
  1118  02F1  120A  118A  24F8  120A  118A  	fcall	_sub_tx
  1119                           
  1120                           ;automacao_2_2023_1_picgenios.c: 148:                             } else {
  1121  02F6  2A0F               	goto	l2124
  1122  02F7                     l144:
  1123                           
  1124                           ;automacao_2_2023_1_picgenios.c: 150:                                 gc_rx[1] |= 0x80;
  1125  02F7  17D1               	bsf	_gc_rx+1,7
  1126  02F8                     l2192:
  1127                           
  1128                           ;automacao_2_2023_1_picgenios.c: 151:                                 gc_rx[2] = 2;
  1129  02F8  3002               	movlw	2
  1130  02F9  00B7               	movwf	??_main
  1131  02FA  0837               	movf	??_main,w
  1132  02FB  00D2               	movwf	_gc_rx+2
  1133  02FC                     l2194:
  1134                           
  1135                           ;automacao_2_2023_1_picgenios.c: 152:                                 i_crc2 = f_crc(3, 
      +                          gc_rx);
  1136  02FC  3050               	movlw	(low (_gc_rx| 0))& (0+255)
  1137  02FD  00B7               	movwf	??_main
  1138  02FE  0837               	movf	??_main,w
  1139  02FF  00F4               	movwf	f_crc@c_buffer
  1140  0300  3003               	movlw	3
  1141  0301  120A  118A  23E7  120A  118A  	fcall	_f_crc
  1142  0306  0875               	movf	?_f_crc+1,w
  1143  0307  1283               	bcf	3,5	;RP0=0, select bank0
  1144  0308  1303               	bcf	3,6	;RP1=0, select bank0
  1145  0309  00CD               	movwf	main@i_crc2+1
  1146  030A  0874               	movf	?_f_crc,w
  1147  030B  00CC               	movwf	main@i_crc2
  1148  030C                     l2196:
  1149                           
  1150                           ;automacao_2_2023_1_picgenios.c: 153:                                 gc_rx[3] = i_crc2;
  1151  030C  084C               	movf	main@i_crc2,w
  1152  030D  00B7               	movwf	??_main
  1153  030E  0837               	movf	??_main,w
  1154  030F  00D3               	movwf	_gc_rx+3
  1155  0310                     l2198:
  1156                           
  1157                           ;automacao_2_2023_1_picgenios.c: 154:                                 gc_rx[4] = i_crc2 
      +                          >> 8;
  1158  0310  084D               	movf	main@i_crc2+1,w
  1159  0311  00B7               	movwf	??_main
  1160  0312  0837               	movf	??_main,w
  1161  0313  00D4               	movwf	_gc_rx+4
  1162  0314                     l2200:
  1163                           
  1164                           ;automacao_2_2023_1_picgenios.c: 155:                                 _delay((unsigned l
      +                          ong)((50)*(8000000L/4000.0)));
  1165  0314  3082               	movlw	130
  1166  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1167  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1168  0317  00B8               	movwf	??_main+1
  1169  0318  30DD               	movlw	221
  1170  0319  00B7               	movwf	??_main
  1171  031A                     u1757:
  1172  031A  0BB7               	decfsz	??_main,f
  1173  031B  2B1A               	goto	u1757
  1174  031C  0BB8               	decfsz	??_main+1,f
  1175  031D  2B1A               	goto	u1757
  1176  031E                     l2202:
  1177                           
  1178                           ;automacao_2_2023_1_picgenios.c: 156:                                 sub_tx( 5,gc_rx);
  1179  031E  3050               	movlw	(low (_gc_rx| 0))& (0+255)
  1180  031F  1283               	bcf	3,5	;RP0=0, select bank0
  1181  0320  1303               	bcf	3,6	;RP1=0, select bank0
  1182  0321  00B7               	movwf	??_main
  1183  0322  0837               	movf	??_main,w
  1184  0323  00F4               	movwf	sub_tx@c_buffer
  1185  0324  3005               	movlw	5
  1186  0325  120A  118A  24F8  120A  118A  	fcall	_sub_tx
  1187  032A  2A0F               	goto	l2124
  1188  032B                     l2206:
  1189  032B  0851               	movf	_gc_rx+1,w
  1190  032C  00B7               	movwf	??_main
  1191  032D  01B8               	clrf	??_main+1
  1192                           
  1193                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1194                           ; Switch size 1, requested type "simple"
  1195                           ; Number of cases is 1, Range of values is 0 to 0
  1196                           ; switch strategies available:
  1197                           ; Name         Instructions Cycles
  1198                           ; simple_byte            4     3 (average)
  1199                           ; direct_byte           11     8 (fixed)
  1200                           ; jumptable            260     6 (fixed)
  1201                           ;	Chosen strategy is simple_byte
  1202  032E  0838               	movf	??_main+1,w
  1203  032F  3A00               	xorlw	0	; case 0
  1204  0330  1903               	skipnz
  1205  0331  2B33               	goto	l2284
  1206  0332  2A0F               	goto	l2124
  1207  0333                     l2284:
  1208                           
  1209                           ; Switch size 1, requested type "simple"
  1210                           ; Number of cases is 1, Range of values is 5 to 5
  1211                           ; switch strategies available:
  1212                           ; Name         Instructions Cycles
  1213                           ; simple_byte            4     3 (average)
  1214                           ; direct_byte           14    11 (fixed)
  1215                           ; jumptable            263     9 (fixed)
  1216                           ;	Chosen strategy is simple_byte
  1217  0333  0837               	movf	??_main,w
  1218  0334  3A05               	xorlw	5	; case 5
  1219  0335  1903               	skipnz
  1220  0336  2A56               	goto	l2146
  1221  0337  2A0F               	goto	l2124
  1222  0338  120A  118A  280E   	ljmp	start
  1223  033B                     __end_of_main:
  1224                           
  1225                           	psect	text1
  1226  04F8                     __ptext1:	
  1227 ;; *************** function _sub_tx *****************
  1228 ;; Defined at:
  1229 ;;		line 179 in file "automacao_2_2023_1_picgenios.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  c_max           1    wreg     unsigned char 
  1232 ;;  c_buffer        1    4[COMMON] PTR unsigned char 
  1233 ;;		 -> gc_rx(20), 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  c_max           1    0[BANK0 ] unsigned char 
  1236 ;;  c_i             1    1[BANK0 ] unsigned char 
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1246 ;;      Params:         1       0       0       0       0
  1247 ;;      Locals:         0       2       0       0       0
  1248 ;;      Temps:          1       0       0       0       0
  1249 ;;      Totals:         2       2       0       0       0
  1250 ;;Total ram usage:        4 bytes
  1251 ;; Hardware stack levels used: 1
  1252 ;; Hardware stack levels required when called: 1
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_main
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           
  1261                           ;psect for function _sub_tx
  1262  04F8                     _sub_tx:
  1263                           
  1264                           ;incstack = 0
  1265                           ; Regs used in _sub_tx: [wreg-fsr0h+status,2+status,0]
  1266                           ;sub_tx@c_max stored from wreg
  1267  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1268  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1269  04FA  00A0               	movwf	sub_tx@c_max
  1270  04FB                     l2060:
  1271  04FB                     l154:	
  1272                           ;automacao_2_2023_1_picgenios.c: 180:     unsigned char c_i;;automacao_2_2023_1_picgenio
      +                          s.c: 183:     while (!TXSTAbits.TRMT);
  1273                           
  1274  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  1275  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  1276  04FD  1C98               	btfss	24,1	;volatile
  1277  04FE  2D00               	goto	u1511
  1278  04FF  2D01               	goto	u1510
  1279  0500                     u1511:
  1280  0500  2CFB               	goto	l154
  1281  0501                     u1510:
  1282  0501                     l2062:
  1283                           
  1284                           ;automacao_2_2023_1_picgenios.c: 185:     for (c_i = 0; c_i < c_max; c_i++) {
  1285  0501  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0502  1303               	bcf	3,6	;RP1=0, select bank0
  1287  0503  01A1               	clrf	sub_tx@c_i
  1288  0504  2D19               	goto	l2068
  1289  0505                     l159:
  1290  0505  1683               	bsf	3,5	;RP0=1, select bank1
  1291  0506  1303               	bcf	3,6	;RP1=0, select bank1
  1292  0507  1C98               	btfss	24,1	;volatile
  1293  0508  2D0A               	goto	u1521
  1294  0509  2D0B               	goto	u1520
  1295  050A                     u1521:
  1296  050A  2D05               	goto	l159
  1297  050B                     u1520:
  1298  050B                     l2064:
  1299                           
  1300                           ;automacao_2_2023_1_picgenios.c: 188:         TXREG = c_buffer[c_i];
  1301  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1302  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1303  050D  0821               	movf	sub_tx@c_i,w
  1304  050E  0774               	addwf	sub_tx@c_buffer,w
  1305  050F  00F5               	movwf	??_sub_tx
  1306  0510  0875               	movf	??_sub_tx,w
  1307  0511  0084               	movwf	4
  1308  0512  1383               	bcf	3,7	;select IRP bank0
  1309  0513  0800               	movf	0,w
  1310  0514  0099               	movwf	25	;volatile
  1311  0515                     l2066:
  1312                           
  1313                           ;automacao_2_2023_1_picgenios.c: 191:     }
  1314  0515  3001               	movlw	1
  1315  0516  00F5               	movwf	??_sub_tx
  1316  0517  0875               	movf	??_sub_tx,w
  1317  0518  07A1               	addwf	sub_tx@c_i,f
  1318  0519                     l2068:
  1319  0519  0820               	movf	sub_tx@c_max,w
  1320  051A  0221               	subwf	sub_tx@c_i,w
  1321  051B  1C03               	skipc
  1322  051C  2D1E               	goto	u1531
  1323  051D  2D1F               	goto	u1530
  1324  051E                     u1531:
  1325  051E  2D05               	goto	l159
  1326  051F                     u1530:
  1327  051F                     l163:
  1328  051F  1683               	bsf	3,5	;RP0=1, select bank1
  1329  0520  1303               	bcf	3,6	;RP1=0, select bank1
  1330  0521  1C98               	btfss	24,1	;volatile
  1331  0522  2D24               	goto	u1541
  1332  0523  2D25               	goto	u1540
  1333  0524                     u1541:
  1334  0524  2D1F               	goto	l163
  1335  0525                     u1540:
  1336  0525                     l166:
  1337  0525  0008               	return
  1338  0526                     __end_of_sub_tx:
  1339                           
  1340                           	psect	text2
  1341  0026                     __ptext2:	
  1342 ;; *************** function _sprintf *****************
  1343 ;; Defined at:
  1344 ;;		line 505 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  sp              1    wreg     PTR unsigned char 
  1347 ;;		 -> main@c_texto(16), 
  1348 ;;  f               1    7[BANK0 ] PTR const unsigned char 
  1349 ;;		 -> STR_3(5), 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  1352 ;;		 -> main@c_texto(16), 
  1353 ;;  idx             1   13[BANK0 ] unsigned char 
  1354 ;;  tmpval          4    0        struct .
  1355 ;;  width           2   20[BANK0 ] int 
  1356 ;;  val             2   16[BANK0 ] unsigned int 
  1357 ;;  cp              2    0        PTR const unsigned char 
  1358 ;;  len             2    0        unsigned int 
  1359 ;;  c               1   22[BANK0 ] unsigned char 
  1360 ;;  prec            1   18[BANK0 ] char 
  1361 ;;  flag            1   15[BANK0 ] unsigned char 
  1362 ;;  ap              1   14[BANK0 ] PTR void [1]
  1363 ;;		 -> ?_sprintf(2), 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  2    7[BANK0 ] int 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1373 ;;      Params:         0       3       0       0       0
  1374 ;;      Locals:         0      10       0       0       0
  1375 ;;      Temps:          0       3       0       0       0
  1376 ;;      Totals:         0      16       0       0       0
  1377 ;;Total ram usage:       16 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 2
  1380 ;; This function calls:
  1381 ;;		___lwdiv
  1382 ;;		___wmul
  1383 ;;		_isdigit
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           
  1390                           ;psect for function _sprintf
  1391  0026                     _sprintf:
  1392                           
  1393                           ;incstack = 0
  1394                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1395                           ;sprintf@sp stored from wreg
  1396  0026  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0027  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0028  00B3               	movwf	sprintf@sp
  1399  0029                     l1934:
  1400                           
  1401                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 505: sprintf(char * sp, const
      +                           char * f, ...);/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 506: {;/opt/mi
      +                          crochip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 507:  va_list ap;;/opt/microchip/xc8/
      +                          v2.32/pic/sources/c90/common/doprnt.c: 512:  char c;;/opt/microchip/xc8/v2.32/pic/source
      +                          s/c90/common/doprnt.c: 514:  int width;;/opt/microchip/xc8/v2.32/pic/sources/c90/common/
      +                          doprnt.c: 521:  signed char prec;;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt
      +                          .c: 525:  unsigned char flag;
  1402  0029  3028               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1403  002A  00AA               	movwf	??_sprintf
  1404  002B  082A               	movf	??_sprintf,w
  1405  002C  00AE               	movwf	sprintf@ap
  1406                           
  1407                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 553:  while((c = *f++)) {
  1408  002D  299E               	goto	l2018
  1409  002E                     l1936:
  1410                           
  1411                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 555:   if(c != '%')
  1412  002E  3025               	movlw	37
  1413  002F  0636               	xorwf	sprintf@c,w
  1414  0030  1903               	btfsc	3,2
  1415  0031  2833               	goto	u1351
  1416  0032  2834               	goto	u1350
  1417  0033                     u1351:
  1418  0033  2840               	goto	l1942
  1419  0034                     u1350:
  1420  0034                     l1938:
  1421                           
  1422                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 557:   {;/opt/microchip/xc8/v
      +                          2.32/pic/sources/c90/common/doprnt.c: 558:    ((*sp++ = (c)));
  1423  0034  0836               	movf	sprintf@c,w
  1424  0035  00AA               	movwf	??_sprintf
  1425  0036  0833               	movf	sprintf@sp,w
  1426  0037  0084               	movwf	4
  1427  0038  082A               	movf	??_sprintf,w
  1428  0039  1383               	bcf	3,7	;select IRP bank0
  1429  003A  0080               	movwf	0
  1430  003B                     l1940:
  1431  003B  3001               	movlw	1
  1432  003C  00AA               	movwf	??_sprintf
  1433  003D  082A               	movf	??_sprintf,w
  1434  003E  07B3               	addwf	sprintf@sp,f
  1435                           
  1436                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 559:    continue;
  1437  003F  299E               	goto	l2018
  1438  0040                     l1942:
  1439                           
  1440                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 563:   width = 0;
  1441  0040  01B4               	clrf	sprintf@width
  1442  0041  01B5               	clrf	sprintf@width+1
  1443                           
  1444                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 565:   flag = 0;
  1445  0042  01AF               	clrf	sprintf@flag
  1446  0043  2849               	goto	l1948
  1447  0044                     l280:	
  1448                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 596:    case '0':
  1449                           
  1450                           
  1451                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 597:     flag |= 0x04;
  1452  0044  152F               	bsf	sprintf@flag,2
  1453  0045                     l1944:
  1454                           
  1455                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 598:     f++;
  1456  0045  3001               	movlw	1
  1457  0046  00AA               	movwf	??_sprintf
  1458  0047  082A               	movf	??_sprintf,w
  1459  0048  07A7               	addwf	sprintf@f,f
  1460  0049                     l1948:	
  1461                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 599:     continue;
  1462                           
  1463  0049  0827               	movf	sprintf@f,w
  1464  004A  0084               	movwf	4
  1465  004B  120A  118A  24CB  120A  118A  	fcall	stringdir
  1466  0050  00AA               	movwf	??_sprintf
  1467  0051  01AB               	clrf	??_sprintf+1
  1468                           
  1469                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1470                           ; Switch size 1, requested type "simple"
  1471                           ; Number of cases is 1, Range of values is 0 to 0
  1472                           ; switch strategies available:
  1473                           ; Name         Instructions Cycles
  1474                           ; simple_byte            4     3 (average)
  1475                           ; direct_byte           11     8 (fixed)
  1476                           ; jumptable            260     6 (fixed)
  1477                           ;	Chosen strategy is simple_byte
  1478  0052  082B               	movf	??_sprintf+1,w
  1479  0053  3A00               	xorlw	0	; case 0
  1480  0054  1903               	skipnz
  1481  0055  2857               	goto	l2286
  1482  0056  285C               	goto	l1950
  1483  0057                     l2286:
  1484                           
  1485                           ; Switch size 1, requested type "simple"
  1486                           ; Number of cases is 1, Range of values is 48 to 48
  1487                           ; switch strategies available:
  1488                           ; Name         Instructions Cycles
  1489                           ; simple_byte            4     3 (average)
  1490                           ; direct_byte           14    11 (fixed)
  1491                           ; jumptable            263     9 (fixed)
  1492                           ;	Chosen strategy is simple_byte
  1493  0057  082A               	movf	??_sprintf,w
  1494  0058  3A30               	xorlw	48	; case 48
  1495  0059  1903               	skipnz
  1496  005A  2844               	goto	l280
  1497  005B  285C               	goto	l1950
  1498  005C                     l1950:
  1499                           
  1500                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 614:   if(isdigit((unsigned)*
      +                          f)) {
  1501  005C  0827               	movf	sprintf@f,w
  1502  005D  0084               	movwf	4
  1503  005E  120A  118A  24CB  120A  118A  	fcall	stringdir
  1504  0063  120A  118A  2599  120A  118A  	fcall	_isdigit
  1505  0068  1C03               	btfss	3,0
  1506  0069  286B               	goto	u1361
  1507  006A  286C               	goto	u1360
  1508  006B                     u1361:
  1509  006B  28AC               	goto	l1964
  1510  006C                     u1360:
  1511  006C                     l1952:
  1512                           
  1513                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 615:    width = 0;
  1514  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1515  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1516  006E  01B4               	clrf	sprintf@width
  1517  006F  01B5               	clrf	sprintf@width+1
  1518  0070                     l1954:
  1519                           
  1520                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 617:     width *= 10;
  1521  0070  300A               	movlw	10
  1522  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0073  00A0               	movwf	___wmul@multiplier
  1525  0074  3000               	movlw	0
  1526  0075  00A1               	movwf	___wmul@multiplier+1
  1527  0076  0835               	movf	sprintf@width+1,w
  1528  0077  00A3               	movwf	___wmul@multiplicand+1
  1529  0078  0834               	movf	sprintf@width,w
  1530  0079  00A2               	movwf	___wmul@multiplicand
  1531  007A  120A  118A  2526  120A  118A  	fcall	___wmul
  1532  007F  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0080  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0081  0821               	movf	?___wmul+1,w
  1535  0082  00B5               	movwf	sprintf@width+1
  1536  0083  0820               	movf	?___wmul,w
  1537  0084  00B4               	movwf	sprintf@width
  1538  0085                     l1956:
  1539                           
  1540                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 618:        width += *f++ - '
      +                          0';
  1541  0085  0827               	movf	sprintf@f,w
  1542  0086  0084               	movwf	4
  1543  0087  120A  118A  24CB  120A  118A  	fcall	stringdir
  1544  008C  3ED0               	addlw	208
  1545  008D  00AA               	movwf	??_sprintf
  1546  008E  30FF               	movlw	255
  1547  008F  1803               	skipnc
  1548  0090  3000               	movlw	0
  1549  0091  00AB               	movwf	??_sprintf+1
  1550  0092  082A               	movf	??_sprintf,w
  1551  0093  07B4               	addwf	sprintf@width,f
  1552  0094  1803               	skipnc
  1553  0095  0AB5               	incf	sprintf@width+1,f
  1554  0096  082B               	movf	??_sprintf+1,w
  1555  0097  07B5               	addwf	sprintf@width+1,f
  1556  0098                     l1958:
  1557  0098  3001               	movlw	1
  1558  0099  00AA               	movwf	??_sprintf
  1559  009A  082A               	movf	??_sprintf,w
  1560  009B  07A7               	addwf	sprintf@f,f
  1561  009C                     l1960:
  1562                           
  1563                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 619:    } while(isdigit((unsi
      +                          gned)*f));
  1564  009C  0827               	movf	sprintf@f,w
  1565  009D  0084               	movwf	4
  1566  009E  120A  118A  24CB  120A  118A  	fcall	stringdir
  1567  00A3  120A  118A  2599  120A  118A  	fcall	_isdigit
  1568  00A8  1803               	btfsc	3,0
  1569  00A9  28AB               	goto	u1371
  1570  00AA  28AC               	goto	u1370
  1571  00AB                     u1371:
  1572  00AB  2870               	goto	l1954
  1573  00AC                     u1370:
  1574  00AC                     l1964:
  1575  00AC  3001               	movlw	1
  1576  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1577  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1578  00AF  07A7               	addwf	sprintf@f,f
  1579  00B0  30FF               	movlw	-1
  1580  00B1  0727               	addwf	sprintf@f,w
  1581  00B2  0084               	movwf	4
  1582  00B3  120A  118A  24CB  120A  118A  	fcall	stringdir
  1583  00B8  00B6               	movwf	sprintf@c
  1584  00B9  00AA               	movwf	??_sprintf
  1585  00BA  01AB               	clrf	??_sprintf+1
  1586                           
  1587                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1588                           ; Switch size 1, requested type "simple"
  1589                           ; Number of cases is 1, Range of values is 0 to 0
  1590                           ; switch strategies available:
  1591                           ; Name         Instructions Cycles
  1592                           ; simple_byte            4     3 (average)
  1593                           ; direct_byte           11     8 (fixed)
  1594                           ; jumptable            260     6 (fixed)
  1595                           ;	Chosen strategy is simple_byte
  1596  00BB  082B               	movf	??_sprintf+1,w
  1597  00BC  3A00               	xorlw	0	; case 0
  1598  00BD  1903               	skipnz
  1599  00BE  28C0               	goto	l2288
  1600  00BF  299E               	goto	l2018
  1601  00C0                     l2288:
  1602                           
  1603                           ; Switch size 1, requested type "simple"
  1604                           ; Number of cases is 3, Range of values is 0 to 120
  1605                           ; switch strategies available:
  1606                           ; Name         Instructions Cycles
  1607                           ; simple_byte           10     6 (average)
  1608                           ; jumptable            260     6 (fixed)
  1609                           ;	Chosen strategy is simple_byte
  1610  00C0  082A               	movf	??_sprintf,w
  1611  00C1  3A00               	xorlw	0	; case 0
  1612  00C2  1903               	skipnz
  1613  00C3  29B0               	goto	l2020
  1614  00C4  3A58               	xorlw	88	; case 88
  1615  00C5  1903               	skipnz
  1616  00C6  28CB               	goto	l1966
  1617  00C7  3A20               	xorlw	32	; case 120
  1618  00C8  1903               	skipnz
  1619  00C9  28CB               	goto	l1966
  1620  00CA  299E               	goto	l2018
  1621  00CB                     l1966:
  1622                           
  1623                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1299:   {;/opt/microchip/xc8/
      +                          v2.32/pic/sources/c90/common/doprnt.c: 1312:     val = (*(unsigned *)__va_arg((*(unsigne
      +                          d **)ap), (unsigned)0));
  1624  00CB  082E               	movf	sprintf@ap,w
  1625  00CC  0084               	movwf	4
  1626  00CD  1383               	bcf	3,7	;select IRP bank0
  1627  00CE  0800               	movf	0,w
  1628  00CF  00B0               	movwf	sprintf@val
  1629  00D0  0A84               	incf	4,f
  1630  00D1  0800               	movf	0,w
  1631  00D2  00B1               	movwf	sprintf@val+1
  1632  00D3                     l1968:
  1633  00D3  3002               	movlw	2
  1634  00D4  00AA               	movwf	??_sprintf
  1635  00D5  082A               	movf	??_sprintf,w
  1636  00D6  07AE               	addwf	sprintf@ap,f
  1637  00D7                     l1970:
  1638                           
  1639                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1313:   };/opt/microchip/xc8/
      +                          v2.32/pic/sources/c90/common/doprnt.c: 1342:    for(c = 1 ; c != sizeof hexpowers/sizeof
      +                           hexpowers[0] ; c++)
  1640  00D7  01B6               	clrf	sprintf@c
  1641  00D8  0AB6               	incf	sprintf@c,f
  1642  00D9                     l1976:
  1643                           
  1644                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1343:     if(val < hexpowers[
      +                          c])
  1645  00D9  0836               	movf	sprintf@c,w
  1646  00DA  00AA               	movwf	??_sprintf
  1647  00DB  072A               	addwf	??_sprintf,w
  1648  00DC  3E01               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  1649  00DD  0084               	movwf	4
  1650  00DE  120A  118A  24CB  120A  118A  	fcall	stringdir
  1651  00E3  00AB               	movwf	??_sprintf+1
  1652  00E4  120A  118A  24CB  120A  118A  	fcall	stringdir
  1653  00E9  00AC               	movwf	??_sprintf+2
  1654  00EA  082C               	movf	??_sprintf+2,w
  1655  00EB  0231               	subwf	sprintf@val+1,w
  1656  00EC  1D03               	skipz
  1657  00ED  28F0               	goto	u1385
  1658  00EE  082B               	movf	??_sprintf+1,w
  1659  00EF  0230               	subwf	sprintf@val,w
  1660  00F0                     u1385:
  1661  00F0  1803               	skipnc
  1662  00F1  28F3               	goto	u1381
  1663  00F2  28F4               	goto	u1380
  1664  00F3                     u1381:
  1665  00F3  28F5               	goto	l1980
  1666  00F4                     u1380:
  1667  00F4  28FF               	goto	l1982
  1668  00F5                     l1980:
  1669  00F5  3001               	movlw	1
  1670  00F6  00AA               	movwf	??_sprintf
  1671  00F7  082A               	movf	??_sprintf,w
  1672  00F8  07B6               	addwf	sprintf@c,f
  1673  00F9  3004               	movlw	4
  1674  00FA  0636               	xorwf	sprintf@c,w
  1675  00FB  1D03               	btfss	3,2
  1676  00FC  28FE               	goto	u1391
  1677  00FD  28FF               	goto	u1390
  1678  00FE                     u1391:
  1679  00FE  28D9               	goto	l1976
  1680  00FF                     u1390:
  1681  00FF                     l1982:
  1682                           
  1683                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1407:   if(width > c)
  1684  00FF  0835               	movf	sprintf@width+1,w
  1685  0100  3A80               	xorlw	128
  1686  0101  3C80               	sublw	128
  1687  0102  1D03               	skipz
  1688  0103  2906               	goto	u1405
  1689  0104  0834               	movf	sprintf@width,w
  1690  0105  0236               	subwf	sprintf@c,w
  1691  0106                     u1405:
  1692  0106  1803               	skipnc
  1693  0107  2909               	goto	u1401
  1694  0108  290A               	goto	u1400
  1695  0109                     u1401:
  1696  0109  2916               	goto	l1986
  1697  010A                     u1400:
  1698  010A                     l1984:
  1699                           
  1700                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1408:    width -= c;
  1701  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1702  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1703  010C  0836               	movf	sprintf@c,w
  1704  010D  00AA               	movwf	??_sprintf
  1705  010E  01AB               	clrf	??_sprintf+1
  1706  010F  082A               	movf	??_sprintf,w
  1707  0110  02B4               	subwf	sprintf@width,f
  1708  0111  082B               	movf	??_sprintf+1,w
  1709  0112  1C03               	skipc
  1710  0113  03B5               	decf	sprintf@width+1,f
  1711  0114  02B5               	subwf	sprintf@width+1,f
  1712  0115  291A               	goto	l1988
  1713  0116                     l1986:
  1714                           
  1715                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1410:    width = 0;
  1716  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1717  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1718  0118  01B4               	clrf	sprintf@width
  1719  0119  01B5               	clrf	sprintf@width+1
  1720  011A                     l1988:
  1721                           
  1722                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1413:   if(flag & 0x04) {
  1723  011A  1D2F               	btfss	sprintf@flag,2
  1724  011B  291D               	goto	u1411
  1725  011C  291E               	goto	u1410
  1726  011D                     u1411:
  1727  011D  293C               	goto	l1998
  1728  011E                     u1410:
  1729  011E                     l1990:
  1730                           
  1731                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1441:    if(width)
  1732  011E  0834               	movf	sprintf@width,w
  1733  011F  0435               	iorwf	sprintf@width+1,w
  1734  0120  1903               	btfsc	3,2
  1735  0121  2923               	goto	u1421
  1736  0122  2924               	goto	u1420
  1737  0123                     u1421:
  1738  0123  2959               	goto	l2006
  1739  0124                     u1420:
  1740  0124                     l1992:
  1741                           
  1742                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1443:      ((*sp++ = ('0')));
  1743  0124  3030               	movlw	48
  1744  0125  00AA               	movwf	??_sprintf
  1745  0126  0833               	movf	sprintf@sp,w
  1746  0127  0084               	movwf	4
  1747  0128  082A               	movf	??_sprintf,w
  1748  0129  1383               	bcf	3,7	;select IRP bank0
  1749  012A  0080               	movwf	0
  1750  012B                     l1994:
  1751  012B  3001               	movlw	1
  1752  012C  00AA               	movwf	??_sprintf
  1753  012D  082A               	movf	??_sprintf,w
  1754  012E  07B3               	addwf	sprintf@sp,f
  1755  012F                     l1996:
  1756  012F  30FF               	movlw	255
  1757  0130  07B4               	addwf	sprintf@width,f
  1758  0131  1803               	skipnc
  1759  0132  0AB5               	incf	sprintf@width+1,f
  1760  0133  30FF               	movlw	255
  1761  0134  07B5               	addwf	sprintf@width+1,f
  1762  0135  0834               	movf	sprintf@width,w
  1763  0136  0435               	iorwf	sprintf@width+1,w
  1764  0137  1D03               	btfss	3,2
  1765  0138  293A               	goto	u1431
  1766  0139  293B               	goto	u1430
  1767  013A                     u1431:
  1768  013A  2924               	goto	l1992
  1769  013B                     u1430:
  1770  013B  2959               	goto	l2006
  1771  013C                     l1998:
  1772                           
  1773                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1448:   {;/opt/microchip/xc8/
      +                          v2.32/pic/sources/c90/common/doprnt.c: 1450:    if(width
  1774  013C  0834               	movf	sprintf@width,w
  1775  013D  0435               	iorwf	sprintf@width+1,w
  1776  013E  1903               	btfsc	3,2
  1777  013F  2941               	goto	u1441
  1778  0140  2942               	goto	u1440
  1779  0141                     u1441:
  1780  0141  2959               	goto	l2006
  1781  0142                     u1440:
  1782  0142                     l2000:
  1783                           
  1784                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1456:      ((*sp++ = (' ')));
  1785  0142  3020               	movlw	32
  1786  0143  00AA               	movwf	??_sprintf
  1787  0144  0833               	movf	sprintf@sp,w
  1788  0145  0084               	movwf	4
  1789  0146  082A               	movf	??_sprintf,w
  1790  0147  1383               	bcf	3,7	;select IRP bank0
  1791  0148  0080               	movwf	0
  1792  0149                     l2002:
  1793  0149  3001               	movlw	1
  1794  014A  00AA               	movwf	??_sprintf
  1795  014B  082A               	movf	??_sprintf,w
  1796  014C  07B3               	addwf	sprintf@sp,f
  1797  014D                     l2004:
  1798  014D  30FF               	movlw	255
  1799  014E  07B4               	addwf	sprintf@width,f
  1800  014F  1803               	skipnc
  1801  0150  0AB5               	incf	sprintf@width+1,f
  1802  0151  30FF               	movlw	255
  1803  0152  07B5               	addwf	sprintf@width+1,f
  1804  0153  0834               	movf	sprintf@width,w
  1805  0154  0435               	iorwf	sprintf@width+1,w
  1806  0155  1D03               	btfss	3,2
  1807  0156  2958               	goto	u1451
  1808  0157  2959               	goto	u1450
  1809  0158                     u1451:
  1810  0158  2942               	goto	l2000
  1811  0159                     u1450:
  1812  0159                     l2006:
  1813                           
  1814                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1498:   prec = c;
  1815  0159  0836               	movf	sprintf@c,w
  1816  015A  00AA               	movwf	??_sprintf
  1817  015B  082A               	movf	??_sprintf,w
  1818  015C  00B2               	movwf	sprintf@prec
  1819                           
  1820                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1500:   while(prec--) {
  1821  015D  2995               	goto	l2016
  1822  015E                     l2008:
  1823                           
  1824                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1504:    {;/opt/microchip/xc8
      +                          /v2.32/pic/sources/c90/common/doprnt.c: 1525:    {;/opt/microchip/xc8/v2.32/pic/sources/
      +                          c90/common/doprnt.c: 1526:     unsigned char idx = (val / hexpowers[(unsigned char)prec]
      +                          ) & 0xF;
  1825  015E  0832               	movf	sprintf@prec,w
  1826  015F  00AA               	movwf	??_sprintf
  1827  0160  072A               	addwf	??_sprintf,w
  1828  0161  3E01               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  1829  0162  0084               	movwf	4
  1830  0163  120A  118A  24CB  120A  118A  	fcall	stringdir
  1831  0168  00A0               	movwf	___lwdiv@divisor
  1832  0169  120A  118A  24CB  120A  118A  	fcall	stringdir
  1833  016E  00A1               	movwf	___lwdiv@divisor+1
  1834  016F  0831               	movf	sprintf@val+1,w
  1835  0170  00A3               	movwf	___lwdiv@dividend+1
  1836  0171  0830               	movf	sprintf@val,w
  1837  0172  00A2               	movwf	___lwdiv@dividend
  1838  0173  120A  118A  2436  120A  118A  	fcall	___lwdiv
  1839  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1840  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1841  017A  0820               	movf	?___lwdiv,w
  1842  017B  390F               	andlw	15
  1843  017C  00AB               	movwf	??_sprintf+1
  1844  017D  082B               	movf	??_sprintf+1,w
  1845  017E  00AD               	movwf	sprintf@idx
  1846  017F                     l2010:
  1847                           
  1848                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1530:     c = "0123456789ABCD
      +                          EF"[idx];
  1849  017F  082D               	movf	sprintf@idx,w
  1850  0180  3E09               	addlw	low ((STR_4-__stringbase)| (0+32768))
  1851  0181  0084               	movwf	4
  1852  0182  120A  118A  24CB  120A  118A  	fcall	stringdir
  1853  0187  00AA               	movwf	??_sprintf
  1854  0188  082A               	movf	??_sprintf,w
  1855  0189  00B6               	movwf	sprintf@c
  1856  018A                     l2012:
  1857                           
  1858                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1534:    };/opt/microchip/xc8
      +                          /v2.32/pic/sources/c90/common/doprnt.c: 1549:    };/opt/microchip/xc8/v2.32/pic/sources/
      +                          c90/common/doprnt.c: 1550:    ((*sp++ = (c)));
  1859  018A  0836               	movf	sprintf@c,w
  1860  018B  00AA               	movwf	??_sprintf
  1861  018C  0833               	movf	sprintf@sp,w
  1862  018D  0084               	movwf	4
  1863  018E  082A               	movf	??_sprintf,w
  1864  018F  1383               	bcf	3,7	;select IRP bank0
  1865  0190  0080               	movwf	0
  1866  0191                     l2014:
  1867  0191  3001               	movlw	1
  1868  0192  00AA               	movwf	??_sprintf
  1869  0193  082A               	movf	??_sprintf,w
  1870  0194  07B3               	addwf	sprintf@sp,f
  1871  0195                     l2016:
  1872                           
  1873                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1500:   while(prec--) {
  1874  0195  30FF               	movlw	255
  1875  0196  00AA               	movwf	??_sprintf
  1876  0197  082A               	movf	??_sprintf,w
  1877  0198  07B2               	addwf	sprintf@prec,f
  1878  0199  0A32               	incf	sprintf@prec,w
  1879  019A  1D03               	btfss	3,2
  1880  019B  299D               	goto	u1461
  1881  019C  299E               	goto	u1460
  1882  019D                     u1461:
  1883  019D  295E               	goto	l2008
  1884  019E                     u1460:
  1885  019E                     l2018:
  1886                           
  1887                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 553:  while((c = *f++)) {
  1888  019E  3001               	movlw	1
  1889  019F  07A7               	addwf	sprintf@f,f
  1890  01A0  30FF               	movlw	-1
  1891  01A1  0727               	addwf	sprintf@f,w
  1892  01A2  0084               	movwf	4
  1893  01A3  120A  118A  24CB  120A  118A  	fcall	stringdir
  1894  01A8  00AA               	movwf	??_sprintf
  1895  01A9  082A               	movf	??_sprintf,w
  1896  01AA  00B6               	movwf	sprintf@c
  1897  01AB  0836               	movf	sprintf@c,w
  1898  01AC  1D03               	btfss	3,2
  1899  01AD  29AF               	goto	u1471
  1900  01AE  29B0               	goto	u1470
  1901  01AF                     u1471:
  1902  01AF  282E               	goto	l1936
  1903  01B0                     u1470:
  1904  01B0                     l2020:
  1905                           
  1906                           ;/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c: 1564:  *sp = 0;
  1907  01B0  0833               	movf	sprintf@sp,w
  1908  01B1  0084               	movwf	4
  1909  01B2  1383               	bcf	3,7	;select IRP bank0
  1910  01B3  0180               	clrf	0
  1911  01B4                     l311:
  1912  01B4  0008               	return
  1913  01B5                     __end_of_sprintf:
  1914                           
  1915                           	psect	text3
  1916  0599                     __ptext3:	
  1917 ;; *************** function _isdigit *****************
  1918 ;; Defined at:
  1919 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/isdigit.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  c               1    wreg     unsigned char 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  c               1    5[COMMON] unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;		None               void
  1926 ;; Registers used:
  1927 ;;		wreg, status,2, status,0
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1933 ;;      Params:         0       0       0       0       0
  1934 ;;      Locals:         2       0       0       0       0
  1935 ;;      Temps:          0       0       0       0       0
  1936 ;;      Totals:         2       0       0       0       0
  1937 ;;Total ram usage:        2 bytes
  1938 ;; Hardware stack levels used: 1
  1939 ;; Hardware stack levels required when called: 1
  1940 ;; This function calls:
  1941 ;;		Nothing
  1942 ;; This function is called by:
  1943 ;;		_sprintf
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           
  1948                           ;psect for function _isdigit
  1949  0599                     _isdigit:
  1950                           
  1951                           ;incstack = 0
  1952                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1953                           ;isdigit@c stored from wreg
  1954  0599  00F5               	movwf	isdigit@c
  1955  059A                     l1362:
  1956  059A  01F4               	clrf	_isdigit$730
  1957  059B                     l1364:
  1958  059B  303A               	movlw	58
  1959  059C  0275               	subwf	isdigit@c,w
  1960  059D  1803               	skipnc
  1961  059E  2DA0               	goto	u621
  1962  059F  2DA1               	goto	u620
  1963  05A0                     u621:
  1964  05A0  2DA9               	goto	l1370
  1965  05A1                     u620:
  1966  05A1                     l1366:
  1967  05A1  3030               	movlw	48
  1968  05A2  0275               	subwf	isdigit@c,w
  1969  05A3  1C03               	skipc
  1970  05A4  2DA6               	goto	u631
  1971  05A5  2DA7               	goto	u630
  1972  05A6                     u631:
  1973  05A6  2DA9               	goto	l1370
  1974  05A7                     u630:
  1975  05A7                     l1368:
  1976  05A7  01F4               	clrf	_isdigit$730
  1977  05A8  0AF4               	incf	_isdigit$730,f
  1978  05A9                     l1370:
  1979  05A9  0C74               	rrf	_isdigit$730,w
  1980  05AA                     l768:
  1981  05AA  0008               	return
  1982  05AB                     __end_of_isdigit:
  1983                           
  1984                           	psect	text4
  1985  0526                     __ptext4:	
  1986 ;; *************** function ___wmul *****************
  1987 ;; Defined at:
  1988 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/Umul16.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1991 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  product         2    4[COMMON] unsigned int 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  2    0[BANK0 ] unsigned int 
  1996 ;; Registers used:
  1997 ;;		wreg, status,2, status,0
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2003 ;;      Params:         0       4       0       0       0
  2004 ;;      Locals:         2       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0
  2006 ;;      Totals:         2       4       0       0       0
  2007 ;;Total ram usage:        6 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; Hardware stack levels required when called: 1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_sprintf
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           
  2018                           ;psect for function ___wmul
  2019  0526                     ___wmul:
  2020  0526                     l1858:	
  2021                           ;incstack = 0
  2022                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2023                           
  2024  0526  01F4               	clrf	___wmul@product
  2025  0527  01F5               	clrf	___wmul@product+1
  2026  0528                     l1860:
  2027  0528  1283               	bcf	3,5	;RP0=0, select bank0
  2028  0529  1303               	bcf	3,6	;RP1=0, select bank0
  2029  052A  1C20               	btfss	___wmul@multiplier,0
  2030  052B  2D2D               	goto	u1221
  2031  052C  2D2E               	goto	u1220
  2032  052D                     u1221:
  2033  052D  2D34               	goto	l315
  2034  052E                     u1220:
  2035  052E                     l1862:
  2036  052E  0822               	movf	___wmul@multiplicand,w
  2037  052F  07F4               	addwf	___wmul@product,f
  2038  0530  1803               	skipnc
  2039  0531  0AF5               	incf	___wmul@product+1,f
  2040  0532  0823               	movf	___wmul@multiplicand+1,w
  2041  0533  07F5               	addwf	___wmul@product+1,f
  2042  0534                     l315:
  2043  0534  3001               	movlw	1
  2044  0535                     u1235:
  2045  0535  1003               	clrc
  2046  0536  0DA2               	rlf	___wmul@multiplicand,f
  2047  0537  0DA3               	rlf	___wmul@multiplicand+1,f
  2048  0538  3EFF               	addlw	-1
  2049  0539  1D03               	skipz
  2050  053A  2D35               	goto	u1235
  2051  053B                     l1864:
  2052  053B  3001               	movlw	1
  2053  053C                     u1245:
  2054  053C  1003               	clrc
  2055  053D  0CA1               	rrf	___wmul@multiplier+1,f
  2056  053E  0CA0               	rrf	___wmul@multiplier,f
  2057  053F  3EFF               	addlw	-1
  2058  0540  1D03               	skipz
  2059  0541  2D3C               	goto	u1245
  2060  0542                     l1866:
  2061  0542  0820               	movf	___wmul@multiplier,w
  2062  0543  0421               	iorwf	___wmul@multiplier+1,w
  2063  0544  1D03               	btfss	3,2
  2064  0545  2D47               	goto	u1251
  2065  0546  2D48               	goto	u1250
  2066  0547                     u1251:
  2067  0547  2D28               	goto	l1860
  2068  0548                     u1250:
  2069  0548                     l1868:
  2070  0548  0875               	movf	___wmul@product+1,w
  2071  0549  00A1               	movwf	?___wmul+1
  2072  054A  0874               	movf	___wmul@product,w
  2073  054B  00A0               	movwf	?___wmul
  2074  054C                     l317:
  2075  054C  0008               	return
  2076  054D                     __end_of___wmul:
  2077                           
  2078                           	psect	text5
  2079  0436                     __ptext5:	
  2080 ;; *************** function ___lwdiv *****************
  2081 ;; Defined at:
  2082 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/lwdiv.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  divisor         2    0[BANK0 ] unsigned int 
  2085 ;;  dividend        2    2[BANK0 ] unsigned int 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  quotient        2    5[BANK0 ] unsigned int 
  2088 ;;  counter         1    4[BANK0 ] unsigned char 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  2    0[BANK0 ] unsigned int 
  2091 ;; Registers used:
  2092 ;;		wreg, status,2, status,0
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2098 ;;      Params:         0       4       0       0       0
  2099 ;;      Locals:         0       3       0       0       0
  2100 ;;      Temps:          1       0       0       0       0
  2101 ;;      Totals:         1       7       0       0       0
  2102 ;;Total ram usage:        8 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; Hardware stack levels required when called: 1
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_sprintf
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           
  2113                           ;psect for function ___lwdiv
  2114  0436                     ___lwdiv:
  2115  0436                     l1872:	
  2116                           ;incstack = 0
  2117                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2118                           
  2119  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2121  0438  01A5               	clrf	___lwdiv@quotient
  2122  0439  01A6               	clrf	___lwdiv@quotient+1
  2123  043A                     l1874:
  2124  043A  0820               	movf	___lwdiv@divisor,w
  2125  043B  0421               	iorwf	___lwdiv@divisor+1,w
  2126  043C  1903               	btfsc	3,2
  2127  043D  2C3F               	goto	u1261
  2128  043E  2C40               	goto	u1260
  2129  043F                     u1261:
  2130  043F  2C77               	goto	l1894
  2131  0440                     u1260:
  2132  0440                     l1876:
  2133  0440  01A4               	clrf	___lwdiv@counter
  2134  0441  0AA4               	incf	___lwdiv@counter,f
  2135  0442  2C4E               	goto	l1882
  2136  0443                     l1878:
  2137  0443  3001               	movlw	1
  2138  0444                     u1275:
  2139  0444  1003               	clrc
  2140  0445  0DA0               	rlf	___lwdiv@divisor,f
  2141  0446  0DA1               	rlf	___lwdiv@divisor+1,f
  2142  0447  3EFF               	addlw	-1
  2143  0448  1D03               	skipz
  2144  0449  2C44               	goto	u1275
  2145  044A                     l1880:
  2146  044A  3001               	movlw	1
  2147  044B  00F4               	movwf	??___lwdiv
  2148  044C  0874               	movf	??___lwdiv,w
  2149  044D  07A4               	addwf	___lwdiv@counter,f
  2150  044E                     l1882:
  2151  044E  1FA1               	btfss	___lwdiv@divisor+1,7
  2152  044F  2C51               	goto	u1281
  2153  0450  2C52               	goto	u1280
  2154  0451                     u1281:
  2155  0451  2C43               	goto	l1878
  2156  0452                     u1280:
  2157  0452                     l1884:
  2158  0452  3001               	movlw	1
  2159  0453                     u1295:
  2160  0453  1003               	clrc
  2161  0454  0DA5               	rlf	___lwdiv@quotient,f
  2162  0455  0DA6               	rlf	___lwdiv@quotient+1,f
  2163  0456  3EFF               	addlw	-1
  2164  0457  1D03               	skipz
  2165  0458  2C53               	goto	u1295
  2166  0459  0821               	movf	___lwdiv@divisor+1,w
  2167  045A  0223               	subwf	___lwdiv@dividend+1,w
  2168  045B  1D03               	skipz
  2169  045C  2C5F               	goto	u1305
  2170  045D  0820               	movf	___lwdiv@divisor,w
  2171  045E  0222               	subwf	___lwdiv@dividend,w
  2172  045F                     u1305:
  2173  045F  1C03               	skipc
  2174  0460  2C62               	goto	u1301
  2175  0461  2C63               	goto	u1300
  2176  0462                     u1301:
  2177  0462  2C6A               	goto	l1890
  2178  0463                     u1300:
  2179  0463                     l1886:
  2180  0463  0820               	movf	___lwdiv@divisor,w
  2181  0464  02A2               	subwf	___lwdiv@dividend,f
  2182  0465  0821               	movf	___lwdiv@divisor+1,w
  2183  0466  1C03               	skipc
  2184  0467  03A3               	decf	___lwdiv@dividend+1,f
  2185  0468  02A3               	subwf	___lwdiv@dividend+1,f
  2186  0469                     l1888:
  2187  0469  1425               	bsf	___lwdiv@quotient,0
  2188  046A                     l1890:
  2189  046A  3001               	movlw	1
  2190  046B                     u1315:
  2191  046B  1003               	clrc
  2192  046C  0CA1               	rrf	___lwdiv@divisor+1,f
  2193  046D  0CA0               	rrf	___lwdiv@divisor,f
  2194  046E  3EFF               	addlw	-1
  2195  046F  1D03               	skipz
  2196  0470  2C6B               	goto	u1315
  2197  0471                     l1892:
  2198  0471  3001               	movlw	1
  2199  0472  02A4               	subwf	___lwdiv@counter,f
  2200  0473  1D03               	btfss	3,2
  2201  0474  2C76               	goto	u1321
  2202  0475  2C77               	goto	u1320
  2203  0476                     u1321:
  2204  0476  2C52               	goto	l1884
  2205  0477                     u1320:
  2206  0477                     l1894:
  2207  0477  0826               	movf	___lwdiv@quotient+1,w
  2208  0478  00A1               	movwf	?___lwdiv+1
  2209  0479  0825               	movf	___lwdiv@quotient,w
  2210  047A  00A0               	movwf	?___lwdiv
  2211  047B                     l587:
  2212  047B  0008               	return
  2213  047C                     __end_of___lwdiv:
  2214                           
  2215                           	psect	text6
  2216  047C                     __ptext6:	
  2217 ;; *************** function _lcd_str *****************
  2218 ;; Defined at:
  2219 ;;		line 66 in file "./lcd.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  str             2    1[BANK0 ] PTR const unsigned char 
  2222 ;;		 -> main@c_texto(16), STR_2(2), STR_1(7), 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  i               1    4[BANK0 ] unsigned char 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      void 
  2227 ;; Registers used:
  2228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2234 ;;      Params:         0       2       0       0       0
  2235 ;;      Locals:         0       1       0       0       0
  2236 ;;      Temps:          0       1       0       0       0
  2237 ;;      Totals:         0       4       0       0       0
  2238 ;;Total ram usage:        4 bytes
  2239 ;; Hardware stack levels used: 1
  2240 ;; Hardware stack levels required when called: 3
  2241 ;; This function calls:
  2242 ;;		_lcd_cmd
  2243 ;;		_lcd_dat
  2244 ;; This function is called by:
  2245 ;;		_main
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           
  2250                           ;psect for function _lcd_str
  2251  047C                     _lcd_str:
  2252  047C                     l1922:	
  2253                           ;incstack = 0
  2254                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2255                           
  2256                           
  2257                           ;./lcd.c: 67:     unsigned char i = 0;
  2258  047C  1283               	bcf	3,5	;RP0=0, select bank0
  2259  047D  1303               	bcf	3,6	;RP1=0, select bank0
  2260  047E  01A4               	clrf	lcd_str@i
  2261                           
  2262                           ;./lcd.c: 69:     while (str[i] != 0) {
  2263  047F  2CAF               	goto	l1932
  2264  0480                     l1924:
  2265                           
  2266                           ;./lcd.c: 70:         if (str[i] == '\f') {
  2267  0480  0824               	movf	lcd_str@i,w
  2268  0481  0721               	addwf	lcd_str@str,w
  2269  0482  0084               	movwf	4
  2270  0483  0822               	movf	lcd_str@str+1,w
  2271  0484  1803               	skipnc
  2272  0485  0A22               	incf	lcd_str@str+1,w
  2273  0486  00FF               	movwf	btemp+1
  2274  0487  120A  118A  24C1  120A  118A  	fcall	stringtab
  2275  048C  3A0C               	xorlw	12
  2276  048D  1D03               	skipz
  2277  048E  2C90               	goto	u1331
  2278  048F  2C91               	goto	u1330
  2279  0490                     u1331:
  2280  0490  2C98               	goto	l1928
  2281  0491                     u1330:
  2282  0491                     l1926:
  2283                           
  2284                           ;./lcd.c: 71:             lcd_cmd(0x01);
  2285  0491  3001               	movlw	1
  2286  0492  120A  118A  2573  120A  118A  	fcall	_lcd_cmd
  2287                           
  2288                           ;./lcd.c: 72:         } else {
  2289  0497  2CA9               	goto	l1930
  2290  0498                     l1928:
  2291                           
  2292                           ;./lcd.c: 73:             lcd_dat(str[i]);
  2293  0498  0824               	movf	lcd_str@i,w
  2294  0499  0721               	addwf	lcd_str@str,w
  2295  049A  0084               	movwf	4
  2296  049B  0822               	movf	lcd_str@str+1,w
  2297  049C  1803               	skipnc
  2298  049D  0A22               	incf	lcd_str@str+1,w
  2299  049E  00FF               	movwf	btemp+1
  2300  049F  120A  118A  24C1  120A  118A  	fcall	stringtab
  2301  04A4  120A  118A  254D  120A  118A  	fcall	_lcd_dat
  2302  04A9                     l1930:
  2303                           
  2304                           ;./lcd.c: 76:         i++;
  2305  04A9  3001               	movlw	1
  2306  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2307  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2308  04AC  00A3               	movwf	??_lcd_str
  2309  04AD  0823               	movf	??_lcd_str,w
  2310  04AE  07A4               	addwf	lcd_str@i,f
  2311  04AF                     l1932:
  2312                           
  2313                           ;./lcd.c: 69:     while (str[i] != 0) {
  2314  04AF  0824               	movf	lcd_str@i,w
  2315  04B0  0721               	addwf	lcd_str@str,w
  2316  04B1  0084               	movwf	4
  2317  04B2  0822               	movf	lcd_str@str+1,w
  2318  04B3  1803               	skipnc
  2319  04B4  0A22               	incf	lcd_str@str+1,w
  2320  04B5  00FF               	movwf	btemp+1
  2321  04B6  120A  118A  24C1  120A  118A  	fcall	stringtab
  2322  04BB  3A00               	xorlw	0
  2323  04BC  1D03               	skipz
  2324  04BD  2CBF               	goto	u1341
  2325  04BE  2CC0               	goto	u1340
  2326  04BF                     u1341:
  2327  04BF  2C80               	goto	l1924
  2328  04C0                     u1340:
  2329  04C0                     l106:
  2330  04C0  0008               	return
  2331  04C1                     __end_of_lcd_str:
  2332                           
  2333                           	psect	text7
  2334  054D                     __ptext7:	
  2335 ;; *************** function _lcd_dat *****************
  2336 ;; Defined at:
  2337 ;;		line 38 in file "./lcd.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  val             1    wreg     unsigned char 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  val             1    0[BANK0 ] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		wreg, status,2, status,0, pclath, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2351 ;;      Params:         0       0       0       0       0
  2352 ;;      Locals:         0       1       0       0       0
  2353 ;;      Temps:          2       0       0       0       0
  2354 ;;      Totals:         2       1       0       0       0
  2355 ;;Total ram usage:        3 bytes
  2356 ;; Hardware stack levels used: 1
  2357 ;; Hardware stack levels required when called: 2
  2358 ;; This function calls:
  2359 ;;		_lcd_wr
  2360 ;; This function is called by:
  2361 ;;		_lcd_str
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           
  2366                           ;psect for function _lcd_dat
  2367  054D                     _lcd_dat:
  2368                           
  2369                           ;incstack = 0
  2370                           ; Regs used in _lcd_dat: [wreg+status,2+status,0+pclath+cstack]
  2371                           ;lcd_dat@val stored from wreg
  2372  054D  1283               	bcf	3,5	;RP0=0, select bank0
  2373  054E  1303               	bcf	3,6	;RP1=0, select bank0
  2374  054F  00A0               	movwf	lcd_dat@val
  2375  0550                     l1844:
  2376                           
  2377                           ;./lcd.c: 39:     RE1 = 1;
  2378  0550  1489               	bsf	9,1	;volatile
  2379  0551                     l1846:
  2380                           
  2381                           ;./lcd.c: 40:     lcd_wr(val);
  2382  0551  0820               	movf	lcd_dat@val,w
  2383  0552  120A  118A  25B3  120A  118A  	fcall	_lcd_wr
  2384  0557                     l1848:
  2385                           
  2386                           ;./lcd.c: 41:     RE2 = 1;
  2387  0557  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0558  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0559  1509               	bsf	9,2	;volatile
  2390  055A                     l1850:
  2391                           
  2392                           ;./lcd.c: 42:     _delay((unsigned long)((3)*(8000000L/4000.0)));
  2393  055A  3008               	movlw	8
  2394  055B  00F6               	movwf	??_lcd_dat+1
  2395  055C  30C9               	movlw	201
  2396  055D  00F5               	movwf	??_lcd_dat
  2397  055E                     u1767:
  2398  055E  0BF5               	decfsz	??_lcd_dat,f
  2399  055F  2D5E               	goto	u1767
  2400  0560  0BF6               	decfsz	??_lcd_dat+1,f
  2401  0561  2D5E               	goto	u1767
  2402  0562  2D63               	nop2
  2403  0563                     l1852:
  2404                           
  2405                           ;./lcd.c: 43:     RE1 = 0;
  2406  0563  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0564  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0565  1089               	bcf	9,1	;volatile
  2409  0566                     l1854:
  2410                           
  2411                           ;./lcd.c: 44:     _delay((unsigned long)((3)*(8000000L/4000.0)));
  2412  0566  3008               	movlw	8
  2413  0567  00F6               	movwf	??_lcd_dat+1
  2414  0568  30C9               	movlw	201
  2415  0569  00F5               	movwf	??_lcd_dat
  2416  056A                     u1777:
  2417  056A  0BF5               	decfsz	??_lcd_dat,f
  2418  056B  2D6A               	goto	u1777
  2419  056C  0BF6               	decfsz	??_lcd_dat+1,f
  2420  056D  2D6A               	goto	u1777
  2421  056E  2D6F               	nop2
  2422  056F                     l1856:
  2423                           
  2424                           ;./lcd.c: 45:     RE1 = 1;
  2425  056F  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0570  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0571  1489               	bsf	9,1	;volatile
  2428  0572                     l95:
  2429  0572  0008               	return
  2430  0573                     __end_of_lcd_dat:
  2431                           
  2432                           	psect	text8
  2433  033B                     __ptext8:	
  2434 ;; *************** function _lcd_init *****************
  2435 ;; Defined at:
  2436 ;;		line 48 in file "./lcd.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;		None
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0, pclath, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2450 ;;      Params:         0       0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0
  2452 ;;      Temps:          0       2       0       0       0
  2453 ;;      Totals:         0       2       0       0       0
  2454 ;;Total ram usage:        2 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; Hardware stack levels required when called: 3
  2457 ;; This function calls:
  2458 ;;		_lcd_cmd
  2459 ;; This function is called by:
  2460 ;;		_main
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           
  2465                           ;psect for function _lcd_init
  2466  033B                     _lcd_init:
  2467  033B                     l1898:	
  2468                           ;incstack = 0
  2469                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2470                           
  2471                           
  2472                           ;./lcd.c: 49:     RE1 = 0;
  2473  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2474  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2475  033D  1089               	bcf	9,1	;volatile
  2476                           
  2477                           ;./lcd.c: 50:     RE2 = 0;
  2478  033E  1109               	bcf	9,2	;volatile
  2479  033F                     l1900:
  2480                           
  2481                           ;./lcd.c: 51:     _delay((unsigned long)((20)*(8000000L/4000.0)));
  2482  033F  3034               	movlw	52
  2483  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2484  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2485  0342  00A2               	movwf	??_lcd_init+1
  2486  0343  30F1               	movlw	241
  2487  0344  00A1               	movwf	??_lcd_init
  2488  0345                     u1787:
  2489  0345  0BA1               	decfsz	??_lcd_init,f
  2490  0346  2B45               	goto	u1787
  2491  0347  0BA2               	decfsz	??_lcd_init+1,f
  2492  0348  2B45               	goto	u1787
  2493  0349                     l1902:
  2494                           
  2495                           ;./lcd.c: 52:     RE1 = 1;
  2496  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2497  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2498  034B  1489               	bsf	9,1	;volatile
  2499  034C                     l1904:
  2500                           
  2501                           ;./lcd.c: 54:     lcd_cmd(0x38);
  2502  034C  3038               	movlw	56
  2503  034D  120A  118A  2573  120A  118A  	fcall	_lcd_cmd
  2504  0352                     l1906:
  2505                           
  2506                           ;./lcd.c: 55:     _delay((unsigned long)((5)*(8000000L/4000.0)));
  2507  0352  300D               	movlw	13
  2508  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2509  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2510  0355  00A2               	movwf	??_lcd_init+1
  2511  0356  30FB               	movlw	251
  2512  0357  00A1               	movwf	??_lcd_init
  2513  0358                     u1797:
  2514  0358  0BA1               	decfsz	??_lcd_init,f
  2515  0359  2B58               	goto	u1797
  2516  035A  0BA2               	decfsz	??_lcd_init+1,f
  2517  035B  2B58               	goto	u1797
  2518                           
  2519                           ;./lcd.c: 56:     lcd_cmd(0x38);
  2520  035C  3038               	movlw	56
  2521  035D  120A  118A  2573  120A  118A  	fcall	_lcd_cmd
  2522  0362                     l1908:
  2523                           
  2524                           ;./lcd.c: 57:     _delay((unsigned long)((1)*(8000000L/4000.0)));
  2525  0362  3003               	movlw	3
  2526  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2527  0364  1303               	bcf	3,6	;RP1=0, select bank0
  2528  0365  00A2               	movwf	??_lcd_init+1
  2529  0366  3097               	movlw	151
  2530  0367  00A1               	movwf	??_lcd_init
  2531  0368                     u1807:
  2532  0368  0BA1               	decfsz	??_lcd_init,f
  2533  0369  2B68               	goto	u1807
  2534  036A  0BA2               	decfsz	??_lcd_init+1,f
  2535  036B  2B68               	goto	u1807
  2536  036C                     l1910:
  2537                           
  2538                           ;./lcd.c: 58:     lcd_cmd(0x38);
  2539  036C  3038               	movlw	56
  2540  036D  120A  118A  2573  120A  118A  	fcall	_lcd_cmd
  2541  0372                     l1912:
  2542                           
  2543                           ;./lcd.c: 59:     lcd_cmd(0x08);
  2544  0372  3008               	movlw	8
  2545  0373  120A  118A  2573  120A  118A  	fcall	_lcd_cmd
  2546  0378                     l1914:
  2547                           
  2548                           ;./lcd.c: 60:     lcd_cmd(0x0F);
  2549  0378  300F               	movlw	15
  2550  0379  120A  118A  2573  120A  118A  	fcall	_lcd_cmd
  2551  037E                     l1916:
  2552                           
  2553                           ;./lcd.c: 61:     lcd_cmd(0x01);
  2554  037E  3001               	movlw	1
  2555  037F  120A  118A  2573  120A  118A  	fcall	_lcd_cmd
  2556  0384                     l1918:
  2557                           
  2558                           ;./lcd.c: 62:     lcd_cmd(0x38);
  2559  0384  3038               	movlw	56
  2560  0385  120A  118A  2573  120A  118A  	fcall	_lcd_cmd
  2561  038A                     l1920:
  2562                           
  2563                           ;./lcd.c: 63:     lcd_cmd(0x80);
  2564  038A  3080               	movlw	128
  2565  038B  120A  118A  2573  120A  118A  	fcall	_lcd_cmd
  2566  0390                     l98:
  2567  0390  0008               	return
  2568  0391                     __end_of_lcd_init:
  2569                           
  2570                           	psect	text9
  2571  0573                     __ptext9:	
  2572 ;; *************** function _lcd_cmd *****************
  2573 ;; Defined at:
  2574 ;;		line 28 in file "./lcd.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  val             1    wreg     unsigned char 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  val             1    0[BANK0 ] unsigned char 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, status,2, status,0, pclath, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2588 ;;      Params:         0       0       0       0       0
  2589 ;;      Locals:         0       1       0       0       0
  2590 ;;      Temps:          2       0       0       0       0
  2591 ;;      Totals:         2       1       0       0       0
  2592 ;;Total ram usage:        3 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; Hardware stack levels required when called: 2
  2595 ;; This function calls:
  2596 ;;		_lcd_wr
  2597 ;; This function is called by:
  2598 ;;		_lcd_init
  2599 ;;		_lcd_str
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           
  2604                           ;psect for function _lcd_cmd
  2605  0573                     _lcd_cmd:
  2606                           
  2607                           ;incstack = 0
  2608                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2609                           ;lcd_cmd@val stored from wreg
  2610  0573  1283               	bcf	3,5	;RP0=0, select bank0
  2611  0574  1303               	bcf	3,6	;RP1=0, select bank0
  2612  0575  00A0               	movwf	lcd_cmd@val
  2613  0576                     l1830:
  2614                           
  2615                           ;./lcd.c: 29:     RE1 = 1;
  2616  0576  1489               	bsf	9,1	;volatile
  2617  0577                     l1832:
  2618                           
  2619                           ;./lcd.c: 30:     lcd_wr(val);
  2620  0577  0820               	movf	lcd_cmd@val,w
  2621  0578  120A  118A  25B3  120A  118A  	fcall	_lcd_wr
  2622  057D                     l1834:
  2623                           
  2624                           ;./lcd.c: 31:     RE2 = 0;
  2625  057D  1283               	bcf	3,5	;RP0=0, select bank0
  2626  057E  1303               	bcf	3,6	;RP1=0, select bank0
  2627  057F  1109               	bcf	9,2	;volatile
  2628  0580                     l1836:
  2629                           
  2630                           ;./lcd.c: 32:     _delay((unsigned long)((3)*(8000000L/4000.0)));
  2631  0580  3008               	movlw	8
  2632  0581  00F6               	movwf	??_lcd_cmd+1
  2633  0582  30C9               	movlw	201
  2634  0583  00F5               	movwf	??_lcd_cmd
  2635  0584                     u1817:
  2636  0584  0BF5               	decfsz	??_lcd_cmd,f
  2637  0585  2D84               	goto	u1817
  2638  0586  0BF6               	decfsz	??_lcd_cmd+1,f
  2639  0587  2D84               	goto	u1817
  2640  0588  2D89               	nop2
  2641  0589                     l1838:
  2642                           
  2643                           ;./lcd.c: 33:     RE1 = 0;
  2644  0589  1283               	bcf	3,5	;RP0=0, select bank0
  2645  058A  1303               	bcf	3,6	;RP1=0, select bank0
  2646  058B  1089               	bcf	9,1	;volatile
  2647  058C                     l1840:
  2648                           
  2649                           ;./lcd.c: 34:     _delay((unsigned long)((3)*(8000000L/4000.0)));
  2650  058C  3008               	movlw	8
  2651  058D  00F6               	movwf	??_lcd_cmd+1
  2652  058E  30C9               	movlw	201
  2653  058F  00F5               	movwf	??_lcd_cmd
  2654  0590                     u1827:
  2655  0590  0BF5               	decfsz	??_lcd_cmd,f
  2656  0591  2D90               	goto	u1827
  2657  0592  0BF6               	decfsz	??_lcd_cmd+1,f
  2658  0593  2D90               	goto	u1827
  2659  0594  2D95               	nop2
  2660  0595                     l1842:
  2661                           
  2662                           ;./lcd.c: 35:     RE1 = 1;
  2663  0595  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0596  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0597  1489               	bsf	9,1	;volatile
  2666  0598                     l92:
  2667  0598  0008               	return
  2668  0599                     __end_of_lcd_cmd:
  2669                           
  2670                           	psect	text10
  2671  05B3                     __ptext10:	
  2672 ;; *************** function _lcd_wr *****************
  2673 ;; Defined at:
  2674 ;;		line 24 in file "./lcd.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  val             1    wreg     unsigned char 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  val             1    4[COMMON] unsigned char 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2688 ;;      Params:         0       0       0       0       0
  2689 ;;      Locals:         1       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0
  2691 ;;      Totals:         1       0       0       0       0
  2692 ;;Total ram usage:        1 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; Hardware stack levels required when called: 1
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_lcd_cmd
  2699 ;;		_lcd_dat
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function _lcd_wr
  2705  05B3                     _lcd_wr:
  2706                           
  2707                           ;incstack = 0
  2708                           ; Regs used in _lcd_wr: [wreg]
  2709                           ;lcd_wr@val stored from wreg
  2710  05B3  00F4               	movwf	lcd_wr@val
  2711  05B4                     l1828:
  2712                           
  2713                           ;./lcd.c: 25:     PORTD = val;
  2714  05B4  0874               	movf	lcd_wr@val,w
  2715  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  2716  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  2717  05B7  0088               	movwf	8	;volatile
  2718  05B8                     l89:
  2719  05B8  0008               	return
  2720  05B9                     __end_of_lcd_wr:
  2721                           
  2722                           	psect	text11
  2723  03E7                     __ptext11:	
  2724 ;; *************** function _f_crc *****************
  2725 ;; Defined at:
  2726 ;;		line 203 in file "automacao_2_2023_1_picgenios.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  c_max           1    wreg     unsigned char 
  2729 ;;  c_buffer        1    4[COMMON] PTR unsigned char 
  2730 ;;		 -> gc_rx(20), 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  c_max           1    2[BANK0 ] unsigned char 
  2733 ;;  i_CRC           2    5[BANK0 ] unsigned int 
  2734 ;;  c_j             1    4[BANK0 ] unsigned char 
  2735 ;;  c_i             1    3[BANK0 ] unsigned char 
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  2    4[COMMON] unsigned int 
  2738 ;; Registers used:
  2739 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2745 ;;      Params:         2       0       0       0       0
  2746 ;;      Locals:         0       5       0       0       0
  2747 ;;      Temps:          0       2       0       0       0
  2748 ;;      Totals:         2       7       0       0       0
  2749 ;;Total ram usage:        9 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; Hardware stack levels required when called: 1
  2752 ;; This function calls:
  2753 ;;		Nothing
  2754 ;; This function is called by:
  2755 ;;		_main
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           
  2760                           ;psect for function _f_crc
  2761  03E7                     _f_crc:
  2762                           
  2763                           ;incstack = 0
  2764                           ; Regs used in _f_crc: [wreg-fsr0h+status,2+status,0]
  2765                           ;f_crc@c_max stored from wreg
  2766  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2767  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2768  03E9  00A2               	movwf	f_crc@c_max
  2769  03EA                     l2032:
  2770                           
  2771                           ;automacao_2_2023_1_picgenios.c: 204:     unsigned int i_CRC = 0xffff;
  2772  03EA  30FF               	movlw	255
  2773  03EB  00A5               	movwf	f_crc@i_CRC
  2774  03EC  30FF               	movlw	255
  2775  03ED  00A6               	movwf	f_crc@i_CRC+1
  2776  03EE                     l2034:
  2777                           
  2778                           ;automacao_2_2023_1_picgenios.c: 205:     unsigned char c_i, c_j;;automacao_2_2023_1_pic
      +                          genios.c: 207:     for (c_i = 0; c_i < c_max; c_i++)
  2779  03EE  01A3               	clrf	f_crc@c_i
  2780  03EF  2C2B               	goto	l2054
  2781  03F0                     l2036:
  2782                           
  2783                           ;automacao_2_2023_1_picgenios.c: 208:     {;automacao_2_2023_1_picgenios.c: 209:        
      +                           i_CRC = i_CRC^c_buffer[c_i];
  2784  03F0  0823               	movf	f_crc@c_i,w
  2785  03F1  0774               	addwf	f_crc@c_buffer,w
  2786  03F2  00A0               	movwf	??_f_crc
  2787  03F3  0820               	movf	??_f_crc,w
  2788  03F4  0084               	movwf	4
  2789  03F5  0825               	movf	f_crc@i_CRC,w
  2790  03F6  1383               	bcf	3,7	;select IRP bank0
  2791  03F7  0600               	xorwf	0,w
  2792  03F8  00A5               	movwf	f_crc@i_CRC
  2793  03F9  0826               	movf	f_crc@i_CRC+1,w
  2794  03FA  00A6               	movwf	f_crc@i_CRC+1
  2795  03FB                     l2038:
  2796                           
  2797                           ;automacao_2_2023_1_picgenios.c: 210:         for (c_j = 0; c_j < 8; c_j++) {
  2798  03FB  01A4               	clrf	f_crc@c_j
  2799  03FC                     l171:
  2800                           
  2801                           ;automacao_2_2023_1_picgenios.c: 212:             if (!(i_CRC & 1))
  2802  03FC  1825               	btfsc	f_crc@i_CRC,0
  2803  03FD  2BFF               	goto	u1481
  2804  03FE  2C00               	goto	u1480
  2805  03FF                     u1481:
  2806  03FF  2C0C               	goto	l2046
  2807  0400                     u1480:
  2808  0400                     l2044:
  2809                           
  2810                           ;automacao_2_2023_1_picgenios.c: 213:                 i_CRC = i_CRC >> 1;
  2811  0400  0826               	movf	f_crc@i_CRC+1,w
  2812  0401  00A1               	movwf	??_f_crc+1
  2813  0402  0825               	movf	f_crc@i_CRC,w
  2814  0403  00A0               	movwf	??_f_crc
  2815  0404  1003               	clrc
  2816  0405  0CA1               	rrf	??_f_crc+1,f
  2817  0406  0CA0               	rrf	??_f_crc,f
  2818  0407  0820               	movf	??_f_crc,w
  2819  0408  00A5               	movwf	f_crc@i_CRC
  2820  0409  0821               	movf	??_f_crc+1,w
  2821  040A  00A6               	movwf	f_crc@i_CRC+1
  2822  040B  2C1D               	goto	l2050
  2823  040C                     l2046:
  2824                           
  2825                           ;automacao_2_2023_1_picgenios.c: 215:                 i_CRC = i_CRC >> 1;
  2826  040C  0826               	movf	f_crc@i_CRC+1,w
  2827  040D  00A1               	movwf	??_f_crc+1
  2828  040E  0825               	movf	f_crc@i_CRC,w
  2829  040F  00A0               	movwf	??_f_crc
  2830  0410  1003               	clrc
  2831  0411  0CA1               	rrf	??_f_crc+1,f
  2832  0412  0CA0               	rrf	??_f_crc,f
  2833  0413  0820               	movf	??_f_crc,w
  2834  0414  00A5               	movwf	f_crc@i_CRC
  2835  0415  0821               	movf	??_f_crc+1,w
  2836  0416  00A6               	movwf	f_crc@i_CRC+1
  2837  0417                     l2048:
  2838                           
  2839                           ;automacao_2_2023_1_picgenios.c: 216:                 i_CRC = i_CRC^0xa001;
  2840  0417  3001               	movlw	1
  2841  0418  0625               	xorwf	f_crc@i_CRC,w
  2842  0419  00A5               	movwf	f_crc@i_CRC
  2843  041A  30A0               	movlw	160
  2844  041B  0626               	xorwf	f_crc@i_CRC+1,w
  2845  041C  00A6               	movwf	f_crc@i_CRC+1
  2846  041D                     l2050:
  2847                           
  2848                           ;automacao_2_2023_1_picgenios.c: 218:         }
  2849  041D  3001               	movlw	1
  2850  041E  00A0               	movwf	??_f_crc
  2851  041F  0820               	movf	??_f_crc,w
  2852  0420  07A4               	addwf	f_crc@c_j,f
  2853  0421  3008               	movlw	8
  2854  0422  0224               	subwf	f_crc@c_j,w
  2855  0423  1C03               	skipc
  2856  0424  2C26               	goto	u1491
  2857  0425  2C27               	goto	u1490
  2858  0426                     u1491:
  2859  0426  2BFC               	goto	l171
  2860  0427                     u1490:
  2861  0427                     l2052:
  2862                           
  2863                           ;automacao_2_2023_1_picgenios.c: 220:     }
  2864  0427  3001               	movlw	1
  2865  0428  00A0               	movwf	??_f_crc
  2866  0429  0820               	movf	??_f_crc,w
  2867  042A  07A3               	addwf	f_crc@c_i,f
  2868  042B                     l2054:
  2869  042B  0822               	movf	f_crc@c_max,w
  2870  042C  0223               	subwf	f_crc@c_i,w
  2871  042D  1C03               	skipc
  2872  042E  2C30               	goto	u1501
  2873  042F  2C31               	goto	u1500
  2874  0430                     u1501:
  2875  0430  2BF0               	goto	l2036
  2876  0431                     u1500:
  2877  0431                     l2056:
  2878                           
  2879                           ;automacao_2_2023_1_picgenios.c: 222:     return i_CRC;
  2880  0431  0826               	movf	f_crc@i_CRC+1,w
  2881  0432  00F5               	movwf	?_f_crc+1
  2882  0433  0825               	movf	f_crc@i_CRC,w
  2883  0434  00F4               	movwf	?_f_crc
  2884  0435                     l176:
  2885  0435  0008               	return
  2886  0436                     __end_of_f_crc:
  2887                           
  2888                           	psect	text12
  2889  0391                     __ptext12:	
  2890 ;; *************** function _isr *****************
  2891 ;; Defined at:
  2892 ;;		line 25 in file "automacao_2_2023_1_picgenios.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;		None
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2906 ;;      Params:         0       0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0
  2908 ;;      Temps:          4       0       0       0       0
  2909 ;;      Totals:         4       0       0       0       0
  2910 ;;Total ram usage:        4 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		Interrupt level 1
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           
  2920                           ;psect for function _isr
  2921  0391                     _isr:
  2922  0391                     i1l1586:
  2923                           
  2924                           ;automacao_2_2023_1_picgenios.c: 27:     if (TMR1IE && TMR1IF)
  2925  0391  1683               	bsf	3,5	;RP0=1, select bank1
  2926  0392  1303               	bcf	3,6	;RP1=0, select bank1
  2927  0393  1C0C               	btfss	12,0	;volatile
  2928  0394  2B96               	goto	u97_21
  2929  0395  2B97               	goto	u97_20
  2930  0396                     u97_21:
  2931  0396  2BAE               	goto	i1l1598
  2932  0397                     u97_20:
  2933  0397                     i1l1588:
  2934  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0399  1C0C               	btfss	12,0	;volatile
  2937  039A  2B9C               	goto	u98_21
  2938  039B  2B9D               	goto	u98_20
  2939  039C                     u98_21:
  2940  039C  2BAE               	goto	i1l1598
  2941  039D                     u98_20:
  2942  039D                     i1l1590:
  2943                           
  2944                           ;automacao_2_2023_1_picgenios.c: 28:     {;automacao_2_2023_1_picgenios.c: 29:         T
      +                          MR1IF = 0;
  2945  039D  100C               	bcf	12,0	;volatile
  2946                           
  2947                           ;automacao_2_2023_1_picgenios.c: 30:         TMR1 = 55536;
  2948  039E  30D8               	movlw	216
  2949  039F  008F               	movwf	15	;volatile
  2950  03A0  30F0               	movlw	240
  2951  03A1  008E               	movwf	14	;volatile
  2952  03A2                     i1l1592:
  2953                           
  2954                           ;automacao_2_2023_1_picgenios.c: 32:         if (gi_pisca) {
  2955  03A2  0879               	movf	_gi_pisca,w
  2956  03A3  1903               	btfsc	3,2
  2957  03A4  2BA6               	goto	u99_21
  2958  03A5  2BA7               	goto	u99_20
  2959  03A6                     u99_21:
  2960  03A6  2BAA               	goto	i1l1596
  2961  03A7                     u99_20:
  2962  03A7                     i1l1594:
  2963                           
  2964                           ;automacao_2_2023_1_picgenios.c: 33:             gi_pisca--;
  2965  03A7  3001               	movlw	1
  2966  03A8  02F9               	subwf	_gi_pisca,f
  2967                           
  2968                           ;automacao_2_2023_1_picgenios.c: 34:         } else {
  2969  03A9  2BAE               	goto	i1l1598
  2970  03AA                     i1l1596:
  2971                           
  2972                           ;automacao_2_2023_1_picgenios.c: 35:             gi_pisca = 100;
  2973  03AA  3064               	movlw	100
  2974  03AB  00F0               	movwf	??_isr
  2975  03AC  0870               	movf	??_isr,w
  2976  03AD  00F9               	movwf	_gi_pisca
  2977  03AE                     i1l1598:
  2978                           
  2979                           ;automacao_2_2023_1_picgenios.c: 39:     if (RCIF && RCIE) {
  2980  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2981  03AF  1E8C               	btfss	12,5	;volatile
  2982  03B0  2BB2               	goto	u100_21
  2983  03B1  2BB3               	goto	u100_20
  2984  03B2                     u100_21:
  2985  03B2  2BDE               	goto	i1l127
  2986  03B3                     u100_20:
  2987  03B3                     i1l1600:
  2988  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2989  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  2990  03B5  1E8C               	btfss	12,5	;volatile
  2991  03B6  2BB8               	goto	u101_21
  2992  03B7  2BB9               	goto	u101_20
  2993  03B8                     u101_21:
  2994  03B8  2BDE               	goto	i1l127
  2995  03B9                     u101_20:
  2996  03B9                     i1l1602:
  2997                           
  2998                           ;automacao_2_2023_1_picgenios.c: 40:         if (OERR || FERR) {
  2999  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  3000  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  3001  03BB  1898               	btfsc	24,1	;volatile
  3002  03BC  2BBE               	goto	u102_21
  3003  03BD  2BBF               	goto	u102_20
  3004  03BE                     u102_21:
  3005  03BE  2BC3               	goto	i1l125
  3006  03BF                     u102_20:
  3007  03BF                     i1l1604:
  3008  03BF  1D18               	btfss	24,2	;volatile
  3009  03C0  2BC2               	goto	u103_21
  3010  03C1  2BC3               	goto	u103_20
  3011  03C2                     u103_21:
  3012  03C2  2BCC               	goto	i1l123
  3013  03C3                     u103_20:
  3014  03C3                     i1l125:
  3015                           
  3016                           ;automacao_2_2023_1_picgenios.c: 41:             CREN = 0;
  3017  03C3  1218               	bcf	24,4	;volatile
  3018  03C4                     i1l1606:
  3019                           
  3020                           ;automacao_2_2023_1_picgenios.c: 42:             _delay((unsigned long)((10)*(8000000L/4
      +                          000000.0)));
  3021  03C4  3006               	movlw	6
  3022  03C5  00F0               	movwf	??_isr
  3023  03C6                     u183_27:
  3024  03C6  0BF0               	decfsz	??_isr,f
  3025  03C7  2BC6               	goto	u183_27
  3026  03C8  0000               	nop
  3027  03C9                     i1l1608:
  3028                           
  3029                           ;automacao_2_2023_1_picgenios.c: 43:             CREN = 1;
  3030  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  3031  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  3032  03CB  1618               	bsf	24,4	;volatile
  3033  03CC                     i1l123:	
  3034                           ;automacao_2_2023_1_picgenios.c: 44:         }
  3035                           
  3036                           
  3037                           ;automacao_2_2023_1_picgenios.c: 45:         if (gc_c<sizeof (gc_rx))
  3038  03CC  3014               	movlw	20
  3039  03CD  024F               	subwf	_gc_c,w
  3040  03CE  1803               	skipnc
  3041  03CF  2BD1               	goto	u104_21
  3042  03D0  2BD2               	goto	u104_20
  3043  03D1                     u104_21:
  3044  03D1  2BDE               	goto	i1l127
  3045  03D2                     u104_20:
  3046  03D2                     i1l1610:
  3047                           
  3048                           ;automacao_2_2023_1_picgenios.c: 46:         {;automacao_2_2023_1_picgenios.c: 47:      
      +                                 gc_rx[gc_c] = RCREG;
  3049  03D2  081A               	movf	26,w	;volatile
  3050  03D3  00F0               	movwf	??_isr
  3051  03D4  084F               	movf	_gc_c,w
  3052  03D5  3E50               	addlw	(low (_gc_rx| 0))& (0+255)
  3053  03D6  0084               	movwf	4
  3054  03D7  0870               	movf	??_isr,w
  3055  03D8  1383               	bcf	3,7	;select IRP bank0
  3056  03D9  0080               	movwf	0
  3057  03DA                     i1l1612:
  3058                           
  3059                           ;automacao_2_2023_1_picgenios.c: 48:             gc_c++;
  3060  03DA  3001               	movlw	1
  3061  03DB  00F0               	movwf	??_isr
  3062  03DC  0870               	movf	??_isr,w
  3063  03DD  07CF               	addwf	_gc_c,f
  3064  03DE                     i1l127:
  3065  03DE  0873               	movf	??_isr+3,w
  3066  03DF  008A               	movwf	10
  3067  03E0  0872               	movf	??_isr+2,w
  3068  03E1  0084               	movwf	4
  3069  03E2  0E71               	swapf	??_isr+1,w
  3070  03E3  0083               	movwf	3
  3071  03E4  0EFE               	swapf	btemp,f
  3072  03E5  0E7E               	swapf	btemp,w
  3073  03E6  0009               	retfie
  3074  03E7                     __end_of_isr:
  3075  007E                     btemp	set	126	;btemp
  3076  007E                     wtemp0	set	126
  3077                           
  3078                           	psect	intentry
  3079  0004                     __pintentry:	
  3080                           ;incstack = 0
  3081                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  3082                           
  3083  0004                     interrupt_function:
  3084  007E                     saved_w	set	btemp
  3085  0004  00FE               	movwf	btemp
  3086  0005  0E03               	swapf	3,w
  3087  0006  00F1               	movwf	??_isr+1
  3088  0007  0804               	movf	4,w
  3089  0008  00F2               	movwf	??_isr+2
  3090  0009  080A               	movf	10,w
  3091  000A  00F3               	movwf	??_isr+3
  3092  000B  120A  118A  2B91   	ljmp	_isr
  3093                           
  3094                           	psect	config
  3095                           
  3096                           ;Config register CONFIG @ 0x2007
  3097                           ;	Oscillator Selection bits
  3098                           ;	FOSC = HS, HS oscillator
  3099                           ;	Watchdog Timer Enable bit
  3100                           ;	WDTE = OFF, WDT disabled
  3101                           ;	Power-up Timer Enable bit
  3102                           ;	PWRTE = ON, PWRT enabled
  3103                           ;	Brown-out Reset Enable bit
  3104                           ;	BOREN = OFF, BOR disabled
  3105                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3106                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3107                           ;	Data EEPROM Memory Code Protection bit
  3108                           ;	CPD = OFF, Data EEPROM code protection off
  3109                           ;	Flash Program Memory Write Enable bits
  3110                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3111                           ;	In-Circuit Debugger Mode bit
  3112                           ;	DEBUG = 0x1, unprogrammed default
  3113                           ;	Flash Program Memory Code Protection bit
  3114                           ;	CP = OFF, Code protection off
  3115  2007                     	org	8199
  3116  2007  3F32               	dw	16178

Data Sizes:
    Strings     31
    Constant    8
    Data        1
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     47      68
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@c_texto(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f_crc@c_buffer	PTR unsigned char  size(1) Largest target is 20
		 -> gc_rx(BANK0[20]), 

    sub_tx@c_buffer	PTR unsigned char  size(1) Largest target is 20
		 -> gc_rx(BANK0[20]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 16
		 -> main@c_texto(BANK0[16]), STR_2(CODE[2]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _sprintf->___wmul
    _sprintf->_isdigit
    _lcd_str->_lcd_cmd
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwdiv
    _lcd_str->_lcd_cmd
    _lcd_str->_lcd_dat
    _lcd_init->_lcd_cmd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    3992
                                             23 BANK0     24    24      0
                              _f_crc
                           _lcd_init
                            _lcd_str
                            _sprintf
                             _sub_tx
 ---------------------------------------------------------------------------------
 (1) _sub_tx                                               4     3      1     400
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    21      3    2026
                                              7 BANK0     16    13      3
                            ___lwdiv
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              4     2      2     586
                                              1 BANK0      4     2      2
                            _lcd_cmd
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              3     3      0      62
                                              5 COMMON     2     2      0
                                              0 BANK0      1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      62
                                              1 BANK0      2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      62
                                              5 COMMON     2     2      0
                                              0 BANK0      1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _f_crc                                                9     7      2     579
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _f_crc
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_cmd
     _lcd_dat
       _lcd_wr
   _sprintf
     ___lwdiv
     ___wmul
     _isdigit
   _sub_tx

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2F      44       5       85.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4E      12        0.0%
ABS                  0      0      4E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Mar 20 16:11:25 2023

                      pc 0002                       l92 0598                       l95 0572  
                     l89 05B8                       l98 0390                       fsr 0004  
    ___wmul@multiplicand 0022                      l106 04C0                      l311 01B4  
                    l144 02F7                      l154 04FB                      l171 03FC  
                    l315 0534                      l163 051F                      l317 054C  
                    l166 0525                      l159 0505                      l176 0435  
                    l280 0044                      l587 047B                      l768 05AA  
                    _GIE 005F                      _RC0 0038                      _RC1 0039  
                    _RC2 003A                      _RE1 0049                      _RE2 004A  
                    u620 05A1                      u621 05A0                      u630 05A7  
                    u631 05A6                      _RX9 00C6                      _isr 0391  
                    fsr0 0004                      indf 0000              main@c_texto 003A  
                   l2000 0142                     l2010 017F                     l2002 0149  
                   l2012 018A                     l2004 014D                     l2020 01B0  
                   l2100 01D9                     l2014 0191                     l2006 0159  
                   l2110 01EA                     l2102 01DD                     l2032 03EA  
                   l2008 015E                     l2016 0195                     l2200 0314  
                   l2120 01F6                     l2112 01EE                     l2104 01DE  
                   l2050 041D                     l2034 03EE                     l2018 019E  
                   l2202 031E                     l2122 0204                     l2114 01EF  
                   l2106 01E2                     l2052 0427                     l2044 0400  
                   l2036 03F0                     l2060 04FB                     l2140 024F  
                   l2124 020F                     l2116 01F0                     l2108 01E4  
                   l2046 040C                     l2038 03FB                     l2054 042B  
                   l2062 0501                     l2150 027D                     l2206 032B  
                   l2142 0250                     l2134 0223                     l2126 0217  
                   l2118 01F1                     l2070 01B5                     l2056 0431  
                   l2048 0417                     l2064 050B                     l2160 029C  
                   l2152 0287                     l2136 0243                     l2128 0220  
                   l2080 01C8                     l2072 01B6                     l1370 05A9  
                   l1362 059A                     l2066 0515                     l2170 02B2  
                   l2162 029D                     l2154 028C                     l2146 0256  
                   l2138 0249                     l2090 01D2                     l2082 01CB  
                   l2074 01BC                     l1364 059B                     l2068 0519  
                   l2180 02D4                     l2164 02A2                     l2156 0292  
                   l2172 02BF                     l2148 026D                     l2092 01D3  
                   l2084 01CD                     l2076 01C2                     l1366 05A1  
                   l2190 02EA                     l2182 02D5                     l2174 02C4  
                   l2166 02A7                     l2158 0297                     l2094 01D6  
                   l2086 01CE                     l2078 01C5                     l1368 05A7  
                   l2192 02F8                     l2184 02DA                     l2176 02CA  
                   l2168 02A8                     l2096 01D7                     l2088 01D1  
                   l2194 02FC                     l2186 02DF                     l2178 02CF  
                   l2098 01D8                     l1900 033F                     l2284 0333  
                   l2196 030C                     l2188 02E0                     l1830 0576  
                   l1910 036C                     l1902 0349                     l2286 0057  
                   l2198 0310                     l1840 058C                     l1832 0577  
                   l1920 038A                     l1912 0372                     l1904 034C  
                   l2288 00C0                     l1842 0595                     l1834 057D  
                   l1914 0378                     l1906 0352                     l1850 055A  
                   l1930 04A9                     l1922 047C                     l1828 05B4  
                   l1836 0580                     l1916 037E                     l1908 0362  
                   l1852 0563                     l1844 0550                     l1924 0480  
                   l1932 04AF                     l1860 0528                     l1940 003B  
                   l1838 0589                     l1918 0384                     l1854 0566  
                   l1846 0551                     l1926 0491                     l1862 052E  
                   l1950 005C                     l1942 0040                     l1934 0029  
                   l1856 056F                     l1848 0557                     l1928 0498  
                   l1880 044A                     l1872 0436                     l1864 053B  
                   l1960 009C                     l1952 006C                     l1944 0045  
                   l1936 002E                     l1890 046A                     l1882 044E  
                   l1874 043A                     l1866 0542                     l1858 0526  
                   l1970 00D7                     l1954 0070                     l1938 0034  
                   l1892 0471                     l1884 0452                     l1876 0440  
                   l1868 0548                     l1980 00F5                     l1956 0085  
                   l1964 00AC                     l1948 0049                     l1886 0463  
                   l1878 0443                     l1894 0477                     l1990 011E  
                   l1982 00FF                     l1966 00CB                     l1958 0098  
                   l1888 0469                     l1992 0124                     l1984 010A  
                   l1976 00D9                     l1968 00D3                     l1898 033B  
                   l1994 012B                     l1986 0116                     l1996 012F  
                   l1988 011A                     l1998 013C                     ?_isr 0070  
                   _ADON 00F8                     STR_1 04EA                     STR_2 04F6  
                   STR_3 04F1                     STR_4 04D9                     _BRGH 04C2  
                   _CREN 00C4                     _FERR 00C2                     u1300 0463  
                   u1220 052E                     u1301 0462                     u1221 052D  
                   u1320 0477                     u1400 010A                     u1321 0476  
                   u1305 045F                     u1401 0109                     u1330 0491  
                   u1250 0548                     u1410 011E                     u1331 0490  
                   u1315 046B                     u1251 0547                     u1235 0535  
                   u1411 011D                     u1500 0431                     u1340 04C0  
                   u1260 0440                     u1420 0124                     u1501 0430  
                   u1341 04BF                     u1261 043F                     u1245 053C  
                   u1421 0123                     u1405 0106                     u1430 013B  
                   u1350 0034                     u1510 0501                     u1431 013A  
                   u1351 0033                     u1511 0500                     u1280 0452  
                   u1440 0142                     u1360 006C                     u1520 050B  
                   u1600 028C                     u1281 0451                     u1441 0141  
                   u1361 006B                     u1521 050A                     u1601 028B  
                   u1450 0159                     u1370 00AC                     u1530 051F  
                   u1610 0292                     u1275 0444                     u1451 0158  
                   u1371 00AB                     u1531 051E                     u1611 0291  
                   u1460 019E                     u1380 00F4                     u1540 0525  
                   u1700 02DA                     u1620 0297                     u1461 019D  
                   u1381 00F3                     u1541 0524                     u1701 02D9  
                   u1621 0296                     u1470 01B0                     u1390 00FF  
                   u1710 02DF                     u1630 029C                     u1550 0217  
                   u1295 0453                     u1471 01AF                     u1391 00FE  
                   u1711 02DE                     u1631 029B                     u1551 0216  
                   u1480 0400                     u1640 02A2                     u1560 024F  
                   u1481 03FF                     u1385 00F0                     u1641 02A1  
                   u1561 024E                     u1490 0427                     u1650 02A7  
                   u1570 0255                     u1491 0426                     u1651 02A6  
                   u1571 0254                     u1660 02C4                     u1661 02C3  
                   u1670 02CA                     u1590 0287                     u1807 0368  
                   u1671 02C9                     u1591 0286                     u1727 01FE  
                   u1680 02CF                     u1817 0584                     u1681 02CE  
                   u1737 02AE                     u1585 025E                     u1690 02D4  
                   u1827 0590                     u1747 02E6                     u1691 02D3  
                   u1595 0283                     u1757 031A                     u1767 055E  
                   u1777 056A                     u1787 0345                     _PEIE 005E  
                   u1797 0358                     _RCIE 0465                     _RCIF 0065  
                   _OERR 00C1                     _TMR1 000E                     _SPEN 00C7  
                   _TRMT 04C1                     _TXIE 0464                     _TXEN 04C5  
                   _SYNC 04C4                     _gc_c 004F                     _main 01B5  
                   btemp 007E            f_crc@c_buffer 0074                     start 000E  
                  ??_isr 0070                    ?_main 0070          __end_of___lwdiv 047C  
                  i1l123 03CC                    i1l125 03C3                    i1l127 03DE  
                  _RCREG 001A                    _SPBRG 0099                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    u97_20 0397  
                  u97_21 0396                    _TXREG 0019                    u98_20 039D  
                  u98_21 039C                    u99_20 03A7                    u99_21 03A6  
        __end_of_lcd_dat 0573          __end_of_lcd_cmd 0599          __end_of_lcd_str 04C1  
                  _f_crc 03E7                    _gc_rx 0050          __end_of_isdigit 05AB  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 01B5          __initialization 0011             __end_of_main 033B  
                 ??_main 0037                   ?_f_crc 0074                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E                   u100_20 03B3  
                 u100_21 03B2                   u101_20 03B9                   u101_21 03B8  
                 u102_20 03BF                   u102_21 03BE                   u103_20 03C3  
                 u103_21 03C2                   u104_20 03D2                   i1l1600 03B3  
                 u104_21 03D1                   i1l1610 03D2                   i1l1602 03B9  
                 i1l1612 03DA                   i1l1604 03BF                   i1l1606 03C4  
                 i1l1608 03C9                   i1l1590 039D                   i1l1592 03A2  
                 i1l1594 03A7                   i1l1586 0391                   i1l1596 03AA  
                 i1l1588 0397                   i1l1598 03AE                   u183_27 03C6  
                 _TMR1IE 0460                   _TMR1IF 0060                   _TMR1ON 0080  
       __end_of_lcd_init 0391                   ___wmul 0526                ??___lwdiv 0074  
                 _lcd_wr 05B3                   _sub_tx 04F8                ??_lcd_dat 0075  
              ??_lcd_cmd 0075                ??_lcd_str 0023             __pdataCOMMON 0079  
              ??_isdigit 0074                   saved_w 007E                ??_sprintf 002A  
__end_of__initialization 0022           __pcstackCOMMON 0070            __end_of_f_crc 0436  
                ??_f_crc 0020             sprintf@width 0034               __pbssBANK0 004F  
             __pmaintext 01B5                  ?___wmul 0020               __pintentry 0004  
                ?_lcd_wr 0070                  ?_sub_tx 0074                ?_lcd_init 0070  
             __stringtab 04C1               f_crc@i_CRC 0025               f_crc@c_max 0022  
        __size_of___wmul 0027                  ___lwdiv 0436          __size_of_lcd_wr 0006  
                __ptext1 04F8                  __ptext2 0026                  __ptext3 0599  
                __ptext4 0526                  __ptext5 0436                  __ptext6 047C  
                __ptext7 054D                  __ptext8 033B                  __ptext9 0573  
                _lcd_dat 054D                  _lcd_cmd 0573          __size_of_sub_tx 002E  
                _lcd_str 047C        __end_of_hexpowers 04D9                  _isdigit 0599  
           __size_of_isr 0056                  main@c_i 004E                  _sprintf 0026  
                clrloop0 05AC               ??_lcd_init 0021     end_of_initialization 0022  
             lcd_dat@val 0020               lcd_cmd@val 0020           sub_tx@c_buffer 0074  
             main@i_crc2 004C              _CCP1CONbits 0017                _TXSTAbits 0098  
             lcd_str@str 0021           __end_of___wmul 054D            __pidataCOMMON 05B9  
         __end_of_lcd_wr 05B9           __end_of_sub_tx 0526      start_initialization 0011  
            sub_tx@c_max 0020              __end_of_isr 03E7                 ??___wmul 0074  
               ??_lcd_wr 0074                 ??_sub_tx 0075              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_lcd_init 0056  
            sprintf@flag 002F              sprintf@prec 0032         ___lwdiv@dividend 0022  
              _gi_adconv 0077                 ?___lwdiv 0020                __pstrings 04C1  
               ?_lcd_dat 0070                 ?_lcd_cmd 0070                 ?_lcd_str 0021  
               ?_isdigit 0070                _hexpowers 04D1           __size_of_f_crc 004F  
       ___lwdiv@quotient 0025                 ?_sprintf 0027        interrupt_function 0004  
         ___wmul@product 0074                clear_ram0 05AB               _ADCON0bits 001F  
            __stringbase 04D0        ___wmul@multiplier 0020                main@i_crc 004A  
              lcd_wr@val 0074         __size_of___lwdiv 0046       __end_of__stringtab 04D1  
            _isdigit$730 0074         __size_of_lcd_dat 0026         __size_of_lcd_cmd 0026  
             sprintf@idx 002D         __size_of_lcd_str 0045               sprintf@val 0030  
       __size_of_isdigit 0012          ___lwdiv@divisor 0020          ___lwdiv@counter 0024  
               __ptext10 05B3                 __ptext11 03E7                 __ptext12 0391  
               _gi_pisca 0079                 _lcd_init 033B         __size_of_sprintf 018F  
               f_crc@c_i 0023                 f_crc@c_j 0024            __size_of_main 0186  
               lcd_str@i 0024                sub_tx@c_i 0021                 isdigit@c 0075  
               intlevel1 0000                sprintf@ap 002E                sprintf@sp 0033  
              stringcode 04CB                 sprintf@c 0036                 sprintf@f 0027  
               stringdir 04CB                 stringtab 04C1  
